{"ast":null,"code":"var _jsxFileName = \"/home/mrblackghost/Documents/Projects/Task/task/src/Disperse.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Disperse = () => {\n  _s();\n  const [inputValue, setInputValue] = useState([]);\n  const [error, setError] = useState(null);\n  const [showerror, setshowError] = useState(false);\n  const [splitdata, setSplitData] = useState([]);\n  const [showbutton, setShowbutton] = useState(false);\n  const [showtext, setShowText] = useState([]);\n  useEffect(() => {\n    const tempSplitData = inputValue.map((str, index) => {\n      const [address, amount] = str.split(/[ ,=]/);\n      return {\n        address,\n        amount: amount,\n        line: index + 1\n      };\n    });\n    const timer = setTimeout(() => {\n      if (tempSplitData === \"\") {\n        setSplitData(null);\n      } else {\n        setSplitData(tempSplitData);\n      }\n    }, 1000);\n\n    // Cleanup the timer to avoid memory leaks\n    return () => clearTimeout(timer);\n  }, [inputValue]);\n  const onSumbit = () => {\n    setshowError(true);\n    const errors = [];\n    const duplicateMap = new Map();\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      if (!isNaN(splitdata[previous].amount || splitdata[previous].amount === \"\")) {} else {\n        errors.push(`Line ${previous + 1} wrong amount`);\n      }\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          if (!duplicateMap.has(splitdata[previous].address)) {\n            duplicateMap.set(splitdata[previous].address, [previous + 1]);\n          }\n          if (!duplicateMap.get(splitdata[previous].address).includes(current + 1)) {\n            duplicateMap.get(splitdata[previous].address).push(current + 1);\n          }\n        }\n      }\n    }\n    duplicateMap.forEach((index, address) => {\n      errors.push(`Address ${address} has duplicate entries at lines ${index.join(\", \")}`);\n      setShowbutton(true);\n    });\n    if (errors.length > 0) {\n      setError(errors);\n      setshowError(true);\n    } else {\n      setError([]);\n      setShowbutton(false);\n      setshowError(false);\n    }\n  };\n  const handleCombineBalances = () => {\n    const combinedData = [];\n    let counter = 1;\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          const duplicateAmount = parseInt(splitdata[current].amount, 10); // Parse to integer\n          splitdata[previous].amount = parseInt(splitdata[previous].amount, 10); // Parse to integer\n          splitdata[previous].amount += duplicateAmount;\n          // Remove the duplicate entry\n          splitdata.splice(current, 1);\n          current--; // Adjust the loop index since we removed an element\n        }\n      }\n      // Push non-duplicate items to combinedData\n      combinedData.push({\n        address: splitdata[previous].address,\n        amount: splitdata[previous].amount,\n        line: counter++ // Include the line index\n      });\n    }\n\n    setShowbutton(false);\n    setSplitData(combinedData);\n  };\n  const KeepFirstOne = () => {\n    const filteredData = [];\n    let counter = 1;\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          // Remove the duplicate entry\n          splitdata.splice(current, 1);\n          current--; // Adjust the loop index since we removed an element\n        }\n      }\n      // Push non-duplicate items to filteredData\n      filteredData.push({\n        address: splitdata[previous].address,\n        amount: splitdata[previous].amount,\n        line: counter++ // Include the line index\n      });\n    }\n\n    setShowbutton(false);\n    setSplitData(filteredData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100vh\",\n      backgroundColor: \"whitesmoke\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"90%\",\n        height: \"90%\",\n        backgroundColor: \"white\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"50%\",\n          height: \"50%\",\n          padding: \"3vw\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Addresses with Amounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"grid\",\n            gridTemplateColumns: \"auto 1fr\",\n            gap: \"10px\",\n            height: \"80%\",\n            backgroundColor: \"#FFCCFF\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"13px\"\n            },\n            children: splitdata.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginbottom: \"-10px\",\n                marginTop: \"-0.8px\"\n              },\n              children: item.line\n            }, item.line, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            cols: 5,\n            style: {\n              width: \"100%\",\n              height: \"98.5%\",\n              border: \"0px\",\n              borderLeft: \"1px solid grey\",\n              backgroundColor: \"transparent\",\n              whiteSpace: \"pre-wrap\" // This preserves whitespace and wraps lines\n            },\n\n            value: splitdata.length > 0 ? splitdata.map(item => `${item.address} ${item.amount}`).join(\"\\n\") : inputValue.join(\"\\n\") // Join inputValue with line breaks\n            ,\n\n            onChange: e => {\n              const text = e.target.value;\n\n              // Check for both space and comma\n              // if (text.includes(\",\")) {\n              //   // Replace commas with spaces and then split on spaces\n              //   const newText = text.replace(/,/g, \"\\n\");\n              //   setInputValue(newText.split(\"\\r\\n\"));\n              // } else {\n              setInputValue(text.split(\"\\n\"));\n              // }\n\n              // Clear other state variables\n              setShowText([]);\n              setSplitData([]);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#7D7C7C\",\n            fontSize: \"13px\"\n          },\n          children: \"Separated by ','or' 'or'='\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), showbutton && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            alignItems: \"center\",\n            color: \"red\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: \"transparent\",\n              color: \"red\",\n              border: \"none\",\n              marginRight: \"5px\"\n            },\n            onClick: () => {\n              KeepFirstOne();\n              onSumbit();\n            },\n            children: \"Keep first one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), \"|\", /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: \"transparent\",\n              color: \"red\",\n              border: \"none\",\n              marginLeft: \"5px\"\n            },\n            onClick: () => {\n              handleCombineBalances();\n              onSumbit();\n            },\n            children: \"Combine Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), showerror && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\",\n            fontSize: \"15px\",\n            margin: \"5px 0\"\n          },\n          children: [\" \", error.some(errorMessage => errorMessage.startsWith(\"Address\")) ? \"Duplicated\" : \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: \"1px solid red\",\n              borderRadius: \"4px\",\n              padding: \"2px\",\n              fontSize: \"15px\"\n            },\n            children: error.map((errorMessage, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: errorMessage\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: \"100%\",\n            marginTop: \"3vh\",\n            padding: \"1vw\",\n            backgroundColor: \"Blue\",\n            color: \"white\",\n            marginLeft: \"3px\"\n          },\n          onClick: () => {\n            onSumbit();\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(Disperse, \"n6lKU/73z7B8kEQk1IC5VHhuEJI=\");\n_c = Disperse;\nexport default Disperse;\nvar _c;\n$RefreshReg$(_c, \"Disperse\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Disperse","_s","inputValue","setInputValue","error","setError","showerror","setshowError","splitdata","setSplitData","showbutton","setShowbutton","showtext","setShowText","tempSplitData","map","str","index","address","amount","split","line","timer","setTimeout","clearTimeout","onSumbit","errors","duplicateMap","Map","previous","length","isNaN","push","current","has","set","get","includes","forEach","join","handleCombineBalances","combinedData","counter","duplicateAmount","parseInt","splice","KeepFirstOne","filteredData","style","width","height","backgroundColor","display","justifyContent","alignItems","children","padding","fileName","_jsxFileName","lineNumber","columnNumber","gridTemplateColumns","gap","fontSize","item","marginbottom","marginTop","cols","border","borderLeft","whiteSpace","value","onChange","e","text","target","color","marginRight","onClick","marginLeft","margin","some","errorMessage","startsWith","borderRadius","_c","$RefreshReg$"],"sources":["/home/mrblackghost/Documents/Projects/Task/task/src/Disperse.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Disperse = () => {\n  const [inputValue, setInputValue] = useState([]);\n  const [error, setError] = useState(null);\n  const [showerror, setshowError] = useState(false);\n  const [splitdata, setSplitData] = useState([]);\n  const [showbutton, setShowbutton] = useState(false);\n  const [showtext, setShowText] = useState([]);\n\n  useEffect(() => {\n    const tempSplitData = inputValue.map((str, index) => {\n      const [address, amount] = str.split(/[ ,=]/);\n      return { address, amount: amount, line: index + 1 };\n    });\n\n    const timer = setTimeout(() => {\n      if (tempSplitData === \"\") {\n        setSplitData(null);\n      } else {\n        setSplitData(tempSplitData);\n      }\n    }, 1000);\n\n    // Cleanup the timer to avoid memory leaks\n    return () => clearTimeout(timer);\n  }, [inputValue]);\n\n  const onSumbit = () => {\n    setshowError(true);\n\n    const errors = [];\n    const duplicateMap = new Map();\n\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      if (\n        !isNaN(splitdata[previous].amount || splitdata[previous].amount === \"\")\n      ) {\n      } else {\n        errors.push(`Line ${previous + 1} wrong amount`);\n      }\n\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          if (!duplicateMap.has(splitdata[previous].address)) {\n            duplicateMap.set(splitdata[previous].address, [previous + 1]);\n          }\n          if (\n            !duplicateMap.get(splitdata[previous].address).includes(current + 1)\n          ) {\n            duplicateMap.get(splitdata[previous].address).push(current + 1);\n          }\n        }\n      }\n    }\n    duplicateMap.forEach((index, address) => {\n      errors.push(\n        `Address ${address} has duplicate entries at lines ${index.join(\", \")}`\n      );\n      setShowbutton(true);\n    });\n    if (errors.length > 0) {\n      setError(errors);\n      setshowError(true);\n    } else {\n      setError([]);\n      setShowbutton(false);\n      setshowError(false);\n    }\n  };\n\n  const handleCombineBalances = () => {\n    const combinedData = [];\n    let counter = 1;\n\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          const duplicateAmount = parseInt(splitdata[current].amount, 10); // Parse to integer\n          splitdata[previous].amount = parseInt(splitdata[previous].amount, 10); // Parse to integer\n          splitdata[previous].amount += duplicateAmount;\n          // Remove the duplicate entry\n          splitdata.splice(current, 1);\n          current--; // Adjust the loop index since we removed an element\n        }\n      }\n      // Push non-duplicate items to combinedData\n      combinedData.push({\n        address: splitdata[previous].address,\n        amount: splitdata[previous].amount,\n        line: counter++, // Include the line index\n      });\n    }\n    setShowbutton(false);\n    setSplitData(combinedData);\n  };\n  const KeepFirstOne = () => {\n    const filteredData = [];\n    let counter = 1;\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          // Remove the duplicate entry\n          splitdata.splice(current, 1);\n          current--; // Adjust the loop index since we removed an element\n        }\n      }\n      // Push non-duplicate items to filteredData\n      filteredData.push({\n        address: splitdata[previous].address,\n        amount: splitdata[previous].amount,\n        line: counter++, // Include the line index\n      });\n    }\n    setShowbutton(false);\n    setSplitData(filteredData);\n  };\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100vh\",\n        backgroundColor: \"whitesmoke\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <div\n        style={{\n          width: \"90%\",\n          height: \"90%\",\n          backgroundColor: \"white\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div style={{ width: \"50%\", height: \"50%\", padding: \"3vw\" }}>\n          <h4>Addresses with Amounts</h4>\n\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"auto 1fr\",\n              gap: \"10px\",\n              height: \"80%\",\n              backgroundColor: \"#FFCCFF\",\n            }}\n          >\n            <span style={{ fontSize: \"13px\" }}>\n              {splitdata.map((item) => (\n                <div\n                  key={item.line}\n                  style={{ marginbottom: \"-10px\", marginTop: \"-0.8px\" }}\n                >\n                  {item.line}\n                </div>\n              ))}\n            </span>\n            <textarea\n              cols={5}\n              style={{\n                width: \"100%\",\n                height: \"98.5%\",\n                border: \"0px\",\n                borderLeft: \"1px solid grey\",\n                backgroundColor: \"transparent\",\n                whiteSpace: \"pre-wrap\", // This preserves whitespace and wraps lines\n              }}\n              value={\n                splitdata.length > 0\n                  ? splitdata\n                      .map((item) => `${item.address} ${item.amount}`)\n                      .join(\"\\n\")\n                  : inputValue.join(\"\\n\") // Join inputValue with line breaks\n              }\n              onChange={(e) => {\n                const text = e.target.value;\n\n                // Check for both space and comma\n                // if (text.includes(\",\")) {\n                //   // Replace commas with spaces and then split on spaces\n                //   const newText = text.replace(/,/g, \"\\n\");\n                //   setInputValue(newText.split(\"\\r\\n\"));\n                // } else {\n                setInputValue(text.split(\"\\n\"));\n                // }\n\n                // Clear other state variables\n                setShowText([]);\n                setSplitData([]);\n              }}\n            ></textarea>\n          </div>\n\n          <span style={{ color: \"#7D7C7C\", fontSize: \"13px\" }}>\n            Separated by ','or' 'or'='\n          </span>\n          {showbutton && (\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                alignItems: \"center\",\n                color: \"red\",\n              }}\n            >\n              <button\n                style={{\n                  backgroundColor: \"transparent\",\n                  color: \"red\",\n                  border: \"none\",\n                  marginRight: \"5px\",\n                }}\n                onClick={() => {\n                  KeepFirstOne();\n                  onSumbit();\n                }}\n              >\n                Keep first one\n              </button>\n              |\n              <button\n                style={{\n                  backgroundColor: \"transparent\",\n                  color: \"red\",\n                  border: \"none\",\n                  marginLeft: \"5px\",\n                }}\n                onClick={() => {\n                  handleCombineBalances();\n                  onSumbit();\n                }}\n              >\n                Combine Balance\n              </button>\n            </div>\n          )}\n\n          {showerror && (\n            <div style={{ color: \"red\", fontSize: \"15px\", margin: \"5px 0\" }}>\n              {\" \"}\n              {error.some((errorMessage) => errorMessage.startsWith(\"Address\"))\n                ? \"Duplicated\"\n                : \" \"}\n              <div\n                style={{\n                  border: \"1px solid red\",\n                  borderRadius: \"4px\",\n                  padding: \"2px\",\n                  fontSize: \"15px\",\n                }}\n              >\n                {error.map((errorMessage, index) => (\n                  <p\n                    key={index}\n                    style={{\n                      color: \"red\",\n                    }}\n                  >\n                    {errorMessage}\n                  </p>\n                ))}\n              </div>\n            </div>\n          )}\n\n          <button\n            style={{\n              width: \"100%\",\n              marginTop: \"3vh\",\n              padding: \"1vw\",\n              backgroundColor: \"Blue\",\n              color: \"white\",\n              marginLeft: \"3px\",\n            }}\n            onClick={() => {\n              onSumbit();\n            }}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Disperse;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}