{"ast":null,"code":"var _jsxFileName = \"/home/mrblackghost/Documents/Projects/Task/task/src/Disperse.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst address = [\"0x2CB99F193549681e06C6770dDD5543812B4FaFE8 10\", \"0xEb0D38c92deB969b689acA94D962A07515CC5204 5\", \"0xF4aDE8368DDd835B70b625CF7E3E1Bc5791D18C1 8\", \"0x09ae5A64465c18718a46b3aD946270BD3E5e6aaB 9\", \"0x8B3392483BA26D65E331dB86D4F430E9B3814E5e 15\"];\nconst Disperse = () => {\n  _s();\n  const [inputValue, setInputValue] = useState(address);\n\n  // const [splitData, setSplitData] = useState(null);\n\n  // inputValue.\n\n  const splitLine = line => {\n    const parts = line.split('=');\n    if (parts.length !== 2) {\n      return null; // Invalid format\n    }\n\n    const address = parts[0].trim();\n    const amount = parseFloat(parts[1]);\n    if (isNaN(amount)) {\n      return null; // Amount is not a valid number\n    }\n\n    console.log(`${address} + ${amount}`); // Corrected string interpolation\n    return {\n      address,\n      amount\n    };\n  };\n  const result = splitLine(address);\n  console.log(result);\n  const onSubmit = () => {\n    // Split the input into lines\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100vh',\n      backgroundColor: 'whitesmoke',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '90%',\n        height: '90%',\n        backgroundColor: 'white',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '50%',\n          height: '50%',\n          padding: '3vw'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Addresses with Amounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          cols: 5,\n          style: {\n            width: '100%',\n            height: '80%',\n            display: 'block'\n          },\n          value: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: '100%',\n            marginTop: '5vh',\n            padding: '1vw',\n            backgroundColor: 'Blue',\n            color: 'white'\n          },\n          onClick: s,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n};\n_s(Disperse, \"4Du22w7k4m0wm6C+GvVAPD43jos=\");\n_c = Disperse;\nexport default Disperse;\nvar _c;\n$RefreshReg$(_c, \"Disperse\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","address","Disperse","_s","inputValue","setInputValue","splitLine","line","parts","split","length","trim","amount","parseFloat","isNaN","console","log","result","onSubmit","style","width","height","backgroundColor","display","justifyContent","alignItems","children","padding","fileName","_jsxFileName","lineNumber","columnNumber","cols","value","marginTop","color","onClick","s","_c","$RefreshReg$"],"sources":["/home/mrblackghost/Documents/Projects/Task/task/src/Disperse.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\n\nconst address = [\n  \"0x2CB99F193549681e06C6770dDD5543812B4FaFE8 10\",\n  \"0xEb0D38c92deB969b689acA94D962A07515CC5204 5\",\n  \"0xF4aDE8368DDd835B70b625CF7E3E1Bc5791D18C1 8\",\n  \"0x09ae5A64465c18718a46b3aD946270BD3E5e6aaB 9\",\n  \"0x8B3392483BA26D65E331dB86D4F430E9B3814E5e 15\"\n]\n\nconst Disperse = () => {\n  const [inputValue, setInputValue] = useState(address);\n\n  // const [splitData, setSplitData] = useState(null);\n  \n  // inputValue.\n  \n \n  const splitLine = (line) => {\n    const parts = line.split('=');\n    if (parts.length !== 2) {\n      return null; // Invalid format\n    }\n  \n    const address = parts[0].trim();\n    const amount = parseFloat(parts[1]);\n  \n    if (isNaN(amount)) {\n      return null; // Amount is not a valid number\n    }\n    \n    console.log(`${address} + ${amount}`); // Corrected string interpolation\n    return { address, amount };\n  };\n  \n  \n  const result = splitLine(address);\nconsole.log(result)\n  const onSubmit = () => {\n    // Split the input into lines\n  \n  \n   \n  }\n    \n    return (\n      <div\n        style={{\n          width: '100%',\n          height: '100vh',\n          backgroundColor: 'whitesmoke',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <div\n          style={{\n            width: '90%',\n            height: '90%',\n            backgroundColor: 'white',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <div style={{ width: '50%', height: '50%', padding: '3vw' }}>\n            <h4>Addresses with Amounts</h4>\n\n            <textarea\n              cols={5}\n              style={{ width: '100%', height: '80%', display: 'block' }}\n              value={inputValue}\n            \n            ></textarea>\n            {/* {error && <p style={{ color: 'red' }}>{error}</p>} */}\n\n            <button\n              style={{\n                width: '100%',\n                marginTop: '5vh',\n                padding: '1vw',\n                backgroundColor: 'Blue',\n                color: 'white',\n              }}\n              onClick={s}\n            >\n              Next\n            </button>\n\n          </div>\n        </div>\n      </div>\n    );\n  };\n\nexport default Disperse\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}