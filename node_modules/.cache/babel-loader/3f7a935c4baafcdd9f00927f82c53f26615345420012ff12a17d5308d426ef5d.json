{"ast":null,"code":"var _jsxFileName = \"/home/mrblackghost/Documents/Projects/Task/task/src/Disperse.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst address = [\"0x2CB99F193549681e06C6770dDD5543812B4FaFE8=1\", \"0x8B3392483BA26D65E331dB86D4F430E9B3814E5e 50\", \"0xEb0D38c92deB969b689acA94D962A07515CC5204=2\", \"0xF4aDE8368DDd835B70b625CF7E3E1Bc5791D18C1=10\", \"0x09ae5A64465c18718a46b3aD946270BD3E5e6aaB,13\", \"0x2CB99F193549681e06C6770dDD5543812B4FaFE8=1\", \"0x8B3392483BA26D65E331dB86D4F430E9B3814E5e 50\", \"0x09ae5A64465c18718a46b3aD946270BD3E5e6aaB,13\", \"0x2CB99F193549681e06C6770dDD5543812B4FaFE8=1\"];\nconst Disperse = () => {\n  _s();\n  const [inputValue, setInputValue] = useState([]);\n  const [error, setError] = useState(null);\n  const [showerror, setshowError] = useState(false);\n  const [splitdata, setSplitData] = useState([]);\n  const [showbutton, setShowbutton] = useState(false);\n  const [showtext, setShowText] = useState([]);\n  useEffect(() => {\n    const tempSplitData = inputValue.map((str, index) => {\n      const [address, amount] = str.split(/[ ,=]/);\n      return {\n        address,\n        amount: amount,\n        line: index + 1\n      };\n    });\n    setShowText(tempSplitData);\n    // setInputValue(tempSplitData)\n  }, [inputValue]);\n  const onSumbit = () => {\n    const errors = [];\n    const duplicateMap = new Map();\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      if (isNaN(splitdata[previous].amount)) {\n        errors.push(`Line ${previous + 1} wrong amount`);\n      }\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          if (!duplicateMap.has(splitdata[previous].address)) {\n            duplicateMap.set(splitdata[previous].address, [previous + 1]);\n          }\n          if (!duplicateMap.get(splitdata[previous].address).includes(current + 1)) {\n            duplicateMap.get(splitdata[previous].address).push(current + 1);\n          }\n        }\n      }\n    }\n    duplicateMap.forEach((index, address) => {\n      errors.push(`Address ${address} has duplicate entries at lines ${index.join(\", \")}`);\n      setShowbutton(true);\n    });\n    if (errors.length > 0) {\n      setError(errors);\n      setshowError(true);\n    } else {\n      setError([]);\n      setShowbutton(false);\n      setshowError(false);\n    }\n  };\n  const handleCombineBalances = index => {\n    const combinedData = [];\n    let counter = 1;\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          const duplicateAmount = parseInt(splitdata[current].amount, 10); // Parse to integer\n          splitdata[previous].amount = parseInt(splitdata[previous].amount, 10); // Parse to integer\n          splitdata[previous].amount += duplicateAmount;\n          // Remove the duplicate entry\n          splitdata.splice(current, 1);\n          current--; // Adjust the loop index since we removed an element\n        }\n      }\n      // Push non-duplicate items to combinedData\n      combinedData.push({\n        address: splitdata[previous].address,\n        amount: splitdata[previous].amount,\n        line: counter++ // Include the line index\n      });\n    }\n\n    setShowbutton(false);\n    setSplitData(combinedData);\n  };\n  const KeepFirstOne = () => {\n    const filteredData = [];\n    let counter = 1;\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          // Remove the duplicate entry\n          splitdata.splice(current, 1);\n          current--; // Adjust the loop index since we removed an element\n        }\n      }\n      // Push non-duplicate items to combinedData\n      filteredData.push({\n        address: splitdata[previous].address,\n        amount: splitdata[previous].amount,\n        line: counter++ // Include the line index\n      });\n    }\n\n    setShowbutton(false);\n    setSplitData(filteredData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100vh\",\n      backgroundColor: \"whitesmoke\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"90%\",\n        height: \"90%\",\n        backgroundColor: \"white\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"50%\",\n          height: \"50%\",\n          padding: \"3vw\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Addresses with Amounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"grid\",\n            gridTemplateColumns: \"auto 1fr\",\n            gap: \"10px\",\n            height: \"80%\",\n            backgroundColor: \"#FFCCFF\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"15px\"\n            },\n            children: splitdata.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: item.line\n            }, item.line, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 7\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            cols: 5,\n            style: {\n              width: \"100%\",\n              height: \"98.5%\",\n              border: \"0px\",\n              borderLeft: \"1px solid grey\",\n              backgroundColor: \"transparent\"\n            },\n            value: splitdata.length > 0 ? splitdata.map(item => `${item.address} ${item.amount}`).join(\"\\n\") : inputValue,\n            onChange: e => {\n              setShowText([]);\n              setSplitData([]);\n              setInputValue([]);\n              const text = e.target.value;\n              if (text.includes(\",\")) {\n                // Replace commas with newlines\n                const newText = text.replace(/,/g, \"\\n\");\n                setInputValue(newText.split(\"\\n\"));\n              } else {\n                setInputValue(text.split(\"\\n\"));\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#7D7C7C\",\n            fontSize: \"13px\"\n          },\n          children: \"Separated by ','or' 'or'='\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), showbutton && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            alignItems: \"center\",\n            color: \"red\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: \"transparent\",\n              color: \"red\",\n              border: \"none\",\n              marginRight: \"5px\"\n            },\n            onClick: () => {\n              KeepFirstOne();\n              onSumbit();\n            },\n            children: \"Keep first one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), \"|\", /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: \"transparent\",\n              color: \"red\",\n              border: \"none\",\n              marginLeft: \"5px\"\n            },\n            onClick: () => {\n              handleCombineBalances();\n              onSumbit();\n            },\n            children: \"Combine Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), showerror && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\",\n            fontSize: \"15px\",\n            margin: \"5px 0\"\n          },\n          children: [\" \", error.some(errorMessage => errorMessage.startsWith(\"Address\")) ? \"Duplicated\" : \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: \"1px solid red\",\n              borderRadius: \"4px\",\n              padding: \"2px\",\n              fontSize: \"15px\"\n            },\n            children: error.map((errorMessage, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: errorMessage\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: \"100%\",\n            marginTop: \"3vh\",\n            padding: \"1vw\",\n            backgroundColor: \"Blue\",\n            color: \"white\",\n            marginLeft: \"3px\"\n          },\n          onClick: () => {\n            setSplitData(showtext);\n            onSumbit();\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(Disperse, \"n6lKU/73z7B8kEQk1IC5VHhuEJI=\");\n_c = Disperse;\nexport default Disperse;\nvar _c;\n$RefreshReg$(_c, \"Disperse\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","address","Disperse","_s","inputValue","setInputValue","error","setError","showerror","setshowError","splitdata","setSplitData","showbutton","setShowbutton","showtext","setShowText","tempSplitData","map","str","index","amount","split","line","onSumbit","errors","duplicateMap","Map","previous","length","isNaN","push","current","has","set","get","includes","forEach","join","handleCombineBalances","combinedData","counter","duplicateAmount","parseInt","splice","KeepFirstOne","filteredData","style","width","height","backgroundColor","display","justifyContent","alignItems","children","padding","fileName","_jsxFileName","lineNumber","columnNumber","gridTemplateColumns","gap","fontSize","item","cols","border","borderLeft","value","onChange","e","text","target","newText","replace","color","marginRight","onClick","marginLeft","margin","some","errorMessage","startsWith","borderRadius","marginTop","_c","$RefreshReg$"],"sources":["/home/mrblackghost/Documents/Projects/Task/task/src/Disperse.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst address = [\n  \"0x2CB99F193549681e06C6770dDD5543812B4FaFE8=1\",\n  \"0x8B3392483BA26D65E331dB86D4F430E9B3814E5e 50\",\n  \"0xEb0D38c92deB969b689acA94D962A07515CC5204=2\",\n  \"0xF4aDE8368DDd835B70b625CF7E3E1Bc5791D18C1=10\",\n  \"0x09ae5A64465c18718a46b3aD946270BD3E5e6aaB,13\",\n  \"0x2CB99F193549681e06C6770dDD5543812B4FaFE8=1\",\n  \"0x8B3392483BA26D65E331dB86D4F430E9B3814E5e 50\",\n  \"0x09ae5A64465c18718a46b3aD946270BD3E5e6aaB,13\",\n  \"0x2CB99F193549681e06C6770dDD5543812B4FaFE8=1\",\n];\n\nconst Disperse = () => {\n  const [inputValue, setInputValue] = useState([]);\n  const [error, setError] = useState(null);\n  const [showerror, setshowError] = useState(false);\n  const [splitdata, setSplitData] = useState([]);\n  const [showbutton, setShowbutton] = useState(false);\n  const [showtext, setShowText] = useState([]);\n\n  useEffect(() => {\n    const tempSplitData = inputValue.map((str, index) => {\n      const [address, amount] = str.split(/[ ,=]/);\n      return { address, amount: amount, line: index + 1 };\n    });\n\n    setShowText(tempSplitData);\n    // setInputValue(tempSplitData)\n  }, [inputValue]);\n\n  const onSumbit = () => {\n    const errors = [];\n    const duplicateMap = new Map();\n\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      if (isNaN(splitdata[previous].amount)) {\n        errors.push(`Line ${previous + 1} wrong amount`);\n      }\n\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          if (!duplicateMap.has(splitdata[previous].address)) {\n            duplicateMap.set(splitdata[previous].address, [previous + 1]);\n          }\n          if (\n            !duplicateMap.get(splitdata[previous].address).includes(current + 1)\n          ) {\n            duplicateMap.get(splitdata[previous].address).push(current + 1);\n          }\n        }\n      }\n    }\n    duplicateMap.forEach((index, address) => {\n      errors.push(\n        `Address ${address} has duplicate entries at lines ${index.join(\", \")}`\n      );\n      setShowbutton(true);\n    });\n    if (errors.length > 0) {\n      setError(errors);\n      setshowError(true);\n    } else {\n      setError([]);\n      setShowbutton(false);\n      setshowError(false);\n    }\n  };\n\n  const handleCombineBalances = (index) => {\n    const combinedData = [];\n    let counter = 1;\n\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          const duplicateAmount = parseInt(splitdata[current].amount, 10); // Parse to integer\n          splitdata[previous].amount = parseInt(splitdata[previous].amount, 10); // Parse to integer\n          splitdata[previous].amount += duplicateAmount;\n          // Remove the duplicate entry\n          splitdata.splice(current, 1);\n          current--; // Adjust the loop index since we removed an element\n        }\n      }\n      // Push non-duplicate items to combinedData\n      combinedData.push({\n        address: splitdata[previous].address,\n        amount: splitdata[previous].amount,\n        line: counter++, // Include the line index\n      });\n    }\n    setShowbutton(false);\n    setSplitData(combinedData);\n  };\n  const KeepFirstOne = () => {\n    const filteredData = [];\n    let counter = 1;\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          // Remove the duplicate entry\n          splitdata.splice(current, 1);\n          current--; // Adjust the loop index since we removed an element\n        }\n      }\n      // Push non-duplicate items to combinedData\n      filteredData.push({\n        address: splitdata[previous].address,\n        amount: splitdata[previous].amount,\n        line: counter++, // Include the line index\n      });\n    }\n    setShowbutton(false);\n    setSplitData(filteredData);\n  };\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100vh\",\n        backgroundColor: \"whitesmoke\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <div\n        style={{\n          width: \"90%\",\n          height: \"90%\",\n          backgroundColor: \"white\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div style={{ width: \"50%\", height: \"50%\", padding: \"3vw\" }}>\n          <h4>Addresses with Amounts</h4>\n\n            \n          <div style={{ display: \"grid\", gridTemplateColumns: \"auto 1fr\", gap: \"10px\" ,height:\"80%\" , backgroundColor:\"#FFCCFF\"}}>\n  <span style={{ fontSize: \"15px\" }}>\n    {splitdata.map((item) => (\n      <div key={item.line}>{item.line}</div>\n    ))}\n  </span>\n  <textarea\n    cols={5}\n    style={{ width: \"100%\", height: \"98.5%\" ,border :\"0px\" ,borderLeft:\"1px solid grey\",backgroundColor:\"transparent\"}}\n    value={\n      splitdata.length > 0\n        ? splitdata.map((item) => `${item.address} ${item.amount}`).join(\"\\n\")\n        : inputValue\n    }\n    onChange={(e) => {\n      setShowText([]);\n      setSplitData([]);\n      setInputValue([]);\n      const text = e.target.value;\n      if (text.includes(\",\")) {\n        // Replace commas with newlines\n        const newText = text.replace(/,/g, \"\\n\");\n        setInputValue(newText.split(\"\\n\"));\n      } else {\n        setInputValue(text.split(\"\\n\"));\n      }\n    }}\n  ></textarea>\n</div>\n\n          \n\n\n          <span style={{ color: \"#7D7C7C\", fontSize: \"13px\" }}>\n            Separated by ','or' 'or'='\n          </span>\n          {showbutton && (\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                alignItems: \"center\",\n                color: \"red\",\n              }}\n            >\n              <button\n                style={{\n                  backgroundColor: \"transparent\",\n                  color: \"red\",\n                  border: \"none\",\n                  marginRight: \"5px\",\n                }}\n                onClick={() => {\n                  KeepFirstOne();\n                  onSumbit();\n                }}\n              >\n                Keep first one\n              </button>\n              |\n              <button\n                style={{\n                  backgroundColor: \"transparent\",\n                  color: \"red\",\n                  border: \"none\",\n                  marginLeft: \"5px\",\n                }}\n                onClick={() => {\n                  handleCombineBalances();\n                  onSumbit();\n                }}\n              >\n                Combine Balance\n              </button>\n            </div>\n          )}\n\n          {showerror && (\n            <div style={{ color: \"red\", fontSize: \"15px\", margin: \"5px 0\" }}>\n              {\" \"}\n              {error.some((errorMessage) => errorMessage.startsWith(\"Address\"))\n                ? \"Duplicated\"\n                : \" \"}\n              <div\n                style={{\n                  border: \"1px solid red\",\n                  borderRadius: \"4px\",\n                  padding: \"2px\",\n                  fontSize: \"15px\",\n                }}\n              >\n                {error.map((errorMessage, index) => (\n                  <p\n                    key={index}\n                    style={{\n                      color: \"red\",\n                    }}\n                  >\n                    {errorMessage}\n                  </p>\n                ))}\n              </div>\n            </div>\n          )}\n\n          <button\n            style={{\n              width: \"100%\",\n              marginTop: \"3vh\",\n              padding: \"1vw\",\n              backgroundColor: \"Blue\",\n              color: \"white\",\n              marginLeft: \"3px\",\n            }}\n            onClick={() => {\n              setSplitData(showtext)\n              onSumbit()\n  }}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Disperse;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAG,CACd,8CAA8C,EAC9C,+CAA+C,EAC/C,8CAA8C,EAC9C,+CAA+C,EAC/C,+CAA+C,EAC/C,8CAA8C,EAC9C,+CAA+C,EAC/C,+CAA+C,EAC/C,8CAA8C,CAC/C;AAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMkB,aAAa,GAAGZ,UAAU,CAACa,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;MACnD,MAAM,CAAClB,OAAO,EAAEmB,MAAM,CAAC,GAAGF,GAAG,CAACG,KAAK,CAAC,OAAO,CAAC;MAC5C,OAAO;QAAEpB,OAAO;QAAEmB,MAAM,EAAEA,MAAM;QAAEE,IAAI,EAAEH,KAAK,GAAG;MAAE,CAAC;IACrD,CAAC,CAAC;IAEFJ,WAAW,CAACC,aAAa,CAAC;IAC1B;EACF,CAAC,EAAE,CAACZ,UAAU,CAAC,CAAC;EAEhB,MAAMmB,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,MAAM,GAAG,EAAE;IACjB,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC;IAE9B,KAAK,IAAIC,QAAQ,GAAG,CAAC,EAAEA,QAAQ,GAAGjB,SAAS,CAACkB,MAAM,EAAED,QAAQ,EAAE,EAAE;MAC9D,IAAIE,KAAK,CAACnB,SAAS,CAACiB,QAAQ,CAAC,CAACP,MAAM,CAAC,EAAE;QACrCI,MAAM,CAACM,IAAI,CAAE,QAAOH,QAAQ,GAAG,CAAE,eAAc,CAAC;MAClD;MAEA,KAAK,IAAII,OAAO,GAAGJ,QAAQ,GAAG,CAAC,EAAEI,OAAO,GAAGrB,SAAS,CAACkB,MAAM,EAAEG,OAAO,EAAE,EAAE;QACtE,IAAIrB,SAAS,CAACiB,QAAQ,CAAC,CAAC1B,OAAO,KAAKS,SAAS,CAACqB,OAAO,CAAC,CAAC9B,OAAO,EAAE;UAC9D,IAAI,CAACwB,YAAY,CAACO,GAAG,CAACtB,SAAS,CAACiB,QAAQ,CAAC,CAAC1B,OAAO,CAAC,EAAE;YAClDwB,YAAY,CAACQ,GAAG,CAACvB,SAAS,CAACiB,QAAQ,CAAC,CAAC1B,OAAO,EAAE,CAAC0B,QAAQ,GAAG,CAAC,CAAC,CAAC;UAC/D;UACA,IACE,CAACF,YAAY,CAACS,GAAG,CAACxB,SAAS,CAACiB,QAAQ,CAAC,CAAC1B,OAAO,CAAC,CAACkC,QAAQ,CAACJ,OAAO,GAAG,CAAC,CAAC,EACpE;YACAN,YAAY,CAACS,GAAG,CAACxB,SAAS,CAACiB,QAAQ,CAAC,CAAC1B,OAAO,CAAC,CAAC6B,IAAI,CAACC,OAAO,GAAG,CAAC,CAAC;UACjE;QACF;MACF;IACF;IACAN,YAAY,CAACW,OAAO,CAAC,CAACjB,KAAK,EAAElB,OAAO,KAAK;MACvCuB,MAAM,CAACM,IAAI,CACR,WAAU7B,OAAQ,mCAAkCkB,KAAK,CAACkB,IAAI,CAAC,IAAI,CAAE,EACxE,CAAC;MACDxB,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,CAAC;IACF,IAAIW,MAAM,CAACI,MAAM,GAAG,CAAC,EAAE;MACrBrB,QAAQ,CAACiB,MAAM,CAAC;MAChBf,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MACLF,QAAQ,CAAC,EAAE,CAAC;MACZM,aAAa,CAAC,KAAK,CAAC;MACpBJ,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAM6B,qBAAqB,GAAInB,KAAK,IAAK;IACvC,MAAMoB,YAAY,GAAG,EAAE;IACvB,IAAIC,OAAO,GAAG,CAAC;IAEf,KAAK,IAAIb,QAAQ,GAAG,CAAC,EAAEA,QAAQ,GAAGjB,SAAS,CAACkB,MAAM,EAAED,QAAQ,EAAE,EAAE;MAC9D,KAAK,IAAII,OAAO,GAAGJ,QAAQ,GAAG,CAAC,EAAEI,OAAO,GAAGrB,SAAS,CAACkB,MAAM,EAAEG,OAAO,EAAE,EAAE;QACtE,IAAIrB,SAAS,CAACiB,QAAQ,CAAC,CAAC1B,OAAO,KAAKS,SAAS,CAACqB,OAAO,CAAC,CAAC9B,OAAO,EAAE;UAC9D,MAAMwC,eAAe,GAAGC,QAAQ,CAAChC,SAAS,CAACqB,OAAO,CAAC,CAACX,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC;UACjEV,SAAS,CAACiB,QAAQ,CAAC,CAACP,MAAM,GAAGsB,QAAQ,CAAChC,SAAS,CAACiB,QAAQ,CAAC,CAACP,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC;UACvEV,SAAS,CAACiB,QAAQ,CAAC,CAACP,MAAM,IAAIqB,eAAe;UAC7C;UACA/B,SAAS,CAACiC,MAAM,CAACZ,OAAO,EAAE,CAAC,CAAC;UAC5BA,OAAO,EAAE,CAAC,CAAC;QACb;MACF;MACA;MACAQ,YAAY,CAACT,IAAI,CAAC;QAChB7B,OAAO,EAAES,SAAS,CAACiB,QAAQ,CAAC,CAAC1B,OAAO;QACpCmB,MAAM,EAAEV,SAAS,CAACiB,QAAQ,CAAC,CAACP,MAAM;QAClCE,IAAI,EAAEkB,OAAO,EAAE,CAAE;MACnB,CAAC,CAAC;IACJ;;IACA3B,aAAa,CAAC,KAAK,CAAC;IACpBF,YAAY,CAAC4B,YAAY,CAAC;EAC5B,CAAC;EACD,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,YAAY,GAAG,EAAE;IACvB,IAAIL,OAAO,GAAG,CAAC;IACf,KAAK,IAAIb,QAAQ,GAAG,CAAC,EAAEA,QAAQ,GAAGjB,SAAS,CAACkB,MAAM,EAAED,QAAQ,EAAE,EAAE;MAC9D,KAAK,IAAII,OAAO,GAAGJ,QAAQ,GAAG,CAAC,EAAEI,OAAO,GAAGrB,SAAS,CAACkB,MAAM,EAAEG,OAAO,EAAE,EAAE;QACtE,IAAIrB,SAAS,CAACiB,QAAQ,CAAC,CAAC1B,OAAO,KAAKS,SAAS,CAACqB,OAAO,CAAC,CAAC9B,OAAO,EAAE;UAC9D;UACAS,SAAS,CAACiC,MAAM,CAACZ,OAAO,EAAE,CAAC,CAAC;UAC5BA,OAAO,EAAE,CAAC,CAAC;QACb;MACF;MACA;MACAc,YAAY,CAACf,IAAI,CAAC;QAChB7B,OAAO,EAAES,SAAS,CAACiB,QAAQ,CAAC,CAAC1B,OAAO;QACpCmB,MAAM,EAAEV,SAAS,CAACiB,QAAQ,CAAC,CAACP,MAAM;QAClCE,IAAI,EAAEkB,OAAO,EAAE,CAAE;MACnB,CAAC,CAAC;IACJ;;IACA3B,aAAa,CAAC,KAAK,CAAC;IACpBF,YAAY,CAACkC,YAAY,CAAC;EAC5B,CAAC;EACD,oBACE7C,OAAA;IACE8C,KAAK,EAAE;MACLC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,OAAO;MACfC,eAAe,EAAE,YAAY;MAC7BC,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE;IACd,CAAE;IAAAC,QAAA,eAEFrD,OAAA;MACE8C,KAAK,EAAE;QACLC,KAAK,EAAE,KAAK;QACZC,MAAM,EAAE,KAAK;QACbC,eAAe,EAAE,OAAO;QACxBC,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE;MACd,CAAE;MAAAC,QAAA,eAEFrD,OAAA;QAAK8C,KAAK,EAAE;UAAEC,KAAK,EAAE,KAAK;UAAEC,MAAM,EAAE,KAAK;UAAEM,OAAO,EAAE;QAAM,CAAE;QAAAD,QAAA,gBAC1DrD,OAAA;UAAAqD,QAAA,EAAI;QAAsB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAG/B1D,OAAA;UAAK8C,KAAK,EAAE;YAAEI,OAAO,EAAE,MAAM;YAAES,mBAAmB,EAAE,UAAU;YAAEC,GAAG,EAAE,MAAM;YAAEZ,MAAM,EAAC,KAAK;YAAGC,eAAe,EAAC;UAAS,CAAE;UAAAI,QAAA,gBAC/HrD,OAAA;YAAM8C,KAAK,EAAE;cAAEe,QAAQ,EAAE;YAAO,CAAE;YAAAR,QAAA,EAC/B3C,SAAS,CAACO,GAAG,CAAE6C,IAAI,iBAClB9D,OAAA;cAAAqD,QAAA,EAAsBS,IAAI,CAACxC;YAAI,GAArBwC,IAAI,CAACxC,IAAI;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAkB,CACtC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACP1D,OAAA;YACE+D,IAAI,EAAE,CAAE;YACRjB,KAAK,EAAE;cAAEC,KAAK,EAAE,MAAM;cAAEC,MAAM,EAAE,OAAO;cAAEgB,MAAM,EAAE,KAAK;cAAEC,UAAU,EAAC,gBAAgB;cAAChB,eAAe,EAAC;YAAa,CAAE;YACnHiB,KAAK,EACHxD,SAAS,CAACkB,MAAM,GAAG,CAAC,GAChBlB,SAAS,CAACO,GAAG,CAAE6C,IAAI,IAAM,GAAEA,IAAI,CAAC7D,OAAQ,IAAG6D,IAAI,CAAC1C,MAAO,EAAC,CAAC,CAACiB,IAAI,CAAC,IAAI,CAAC,GACpEjC,UACL;YACD+D,QAAQ,EAAGC,CAAC,IAAK;cACfrD,WAAW,CAAC,EAAE,CAAC;cACfJ,YAAY,CAAC,EAAE,CAAC;cAChBN,aAAa,CAAC,EAAE,CAAC;cACjB,MAAMgE,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACJ,KAAK;cAC3B,IAAIG,IAAI,CAAClC,QAAQ,CAAC,GAAG,CAAC,EAAE;gBACtB;gBACA,MAAMoC,OAAO,GAAGF,IAAI,CAACG,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;gBACxCnE,aAAa,CAACkE,OAAO,CAAClD,KAAK,CAAC,IAAI,CAAC,CAAC;cACpC,CAAC,MAAM;gBACLhB,aAAa,CAACgE,IAAI,CAAChD,KAAK,CAAC,IAAI,CAAC,CAAC;cACjC;YACF;UAAE;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eAKI1D,OAAA;UAAM8C,KAAK,EAAE;YAAE2B,KAAK,EAAE,SAAS;YAAEZ,QAAQ,EAAE;UAAO,CAAE;UAAAR,QAAA,EAAC;QAErD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EACN9C,UAAU,iBACTZ,OAAA;UACE8C,KAAK,EAAE;YACLI,OAAO,EAAE,MAAM;YACfC,cAAc,EAAE,UAAU;YAC1BC,UAAU,EAAE,QAAQ;YACpBqB,KAAK,EAAE;UACT,CAAE;UAAApB,QAAA,gBAEFrD,OAAA;YACE8C,KAAK,EAAE;cACLG,eAAe,EAAE,aAAa;cAC9BwB,KAAK,EAAE,KAAK;cACZT,MAAM,EAAE,MAAM;cACdU,WAAW,EAAE;YACf,CAAE;YACFC,OAAO,EAAEA,CAAA,KAAM;cACb/B,YAAY,CAAC,CAAC;cACdrB,QAAQ,CAAC,CAAC;YACZ,CAAE;YAAA8B,QAAA,EACH;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAET,eAAA1D,OAAA;YACE8C,KAAK,EAAE;cACLG,eAAe,EAAE,aAAa;cAC9BwB,KAAK,EAAE,KAAK;cACZT,MAAM,EAAE,MAAM;cACdY,UAAU,EAAE;YACd,CAAE;YACFD,OAAO,EAAEA,CAAA,KAAM;cACbrC,qBAAqB,CAAC,CAAC;cACvBf,QAAQ,CAAC,CAAC;YACZ,CAAE;YAAA8B,QAAA,EACH;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN,EAEAlD,SAAS,iBACRR,OAAA;UAAK8C,KAAK,EAAE;YAAE2B,KAAK,EAAE,KAAK;YAAEZ,QAAQ,EAAE,MAAM;YAAEgB,MAAM,EAAE;UAAQ,CAAE;UAAAxB,QAAA,GAC7D,GAAG,EACH/C,KAAK,CAACwE,IAAI,CAAEC,YAAY,IAAKA,YAAY,CAACC,UAAU,CAAC,SAAS,CAAC,CAAC,GAC7D,YAAY,GACZ,GAAG,eACPhF,OAAA;YACE8C,KAAK,EAAE;cACLkB,MAAM,EAAE,eAAe;cACvBiB,YAAY,EAAE,KAAK;cACnB3B,OAAO,EAAE,KAAK;cACdO,QAAQ,EAAE;YACZ,CAAE;YAAAR,QAAA,EAED/C,KAAK,CAACW,GAAG,CAAC,CAAC8D,YAAY,EAAE5D,KAAK,kBAC7BnB,OAAA;cAEE8C,KAAK,EAAE;gBACL2B,KAAK,EAAE;cACT,CAAE;cAAApB,QAAA,EAED0B;YAAY,GALR5D,KAAK;cAAAoC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMT,CACJ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,eAED1D,OAAA;UACE8C,KAAK,EAAE;YACLC,KAAK,EAAE,MAAM;YACbmC,SAAS,EAAE,KAAK;YAChB5B,OAAO,EAAE,KAAK;YACdL,eAAe,EAAE,MAAM;YACvBwB,KAAK,EAAE,OAAO;YACdG,UAAU,EAAE;UACd,CAAE;UACFD,OAAO,EAAEA,CAAA,KAAM;YACbhE,YAAY,CAACG,QAAQ,CAAC;YACtBS,QAAQ,CAAC,CAAC;UACtB,CAAE;UAAA8B,QAAA,EACO;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvD,EAAA,CA5PID,QAAQ;AAAAiF,EAAA,GAARjF,QAAQ;AA8Pd,eAAeA,QAAQ;AAAC,IAAAiF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}