{"ast":null,"code":"var _jsxFileName = \"/home/mrblackghost/Documents/Projects/Task/task/src/Disperse.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Disperse = () => {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [error, setError] = useState([]);\n  const [splitdata, setSplitData] = useState([]);\n  const [showbutton, setShowButton] = useState(false);\n  useEffect(() => {\n    const tempSplitData = inputValue.split(/\\n|,|\\s+/).filter(str => str.trim() !== \"\").map((str, index) => {\n      const [address, amount] = str.split('=');\n      return {\n        address,\n        amount: Number(amount),\n        line: index + 1\n      };\n    });\n    setSplitData(tempSplitData);\n  }, [inputValue]);\n  const onSubmit = () => {\n    const errors = [];\n    const duplicateMap = new Map();\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      if (isNaN(splitdata[previous].amount) || splitdata[previous].amount === \"\") {\n        errors.push(`Line ${splitdata[previous].line} has an invalid amount`);\n      }\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          if (!duplicateMap.has(splitdata[previous].address)) {\n            duplicateMap.set(splitdata[previous].address, [previous + 1]);\n          }\n          if (!duplicateMap.get(splitdata[previous].address).includes(current + 1)) {\n            duplicateMap.get(splitdata[previous].address).push(current + 1);\n          }\n        }\n      }\n    }\n    duplicateMap.forEach((index, address) => {\n      errors.push(`Address ${address} has duplicate entries at lines ${index.join(\", \")}`);\n    });\n    setError(errors);\n    setShowButton(true);\n  };\n  const handleCombineBalances = () => {\n    const combinedData = [];\n    let counter = 1;\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          splitdata[previous].amount += splitdata[current].amount;\n          // Remove the duplicate entry\n          splitdata.splice(current, 1);\n          current--; // Adjust the loop index since we removed an element\n        }\n      }\n      // Push non-duplicate items to combinedData\n      combinedData.push({\n        address: splitdata[previous].address,\n        amount: splitdata[previous].amount,\n        line: counter++ // Include the line index\n      });\n    }\n\n    setSplitData(combinedData);\n    setShowButton(false);\n  };\n  const keepFirstOne = () => {\n    const filteredData = [];\n    let counter = 1;\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          // Remove the duplicate entry\n          splitdata.splice(current, 1);\n          current--; // Adjust the loop index since we removed an element\n        }\n      }\n      // Push non-duplicate items to combinedData\n      filteredData.push({\n        address: splitdata[previous].address,\n        amount: splitdata[previous].amount,\n        line: counter++ // Include the line index\n      });\n    }\n\n    setSplitData(filteredData);\n    setShowButton(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100vh\",\n      backgroundColor: \"whitesmoke\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"90%\",\n        height: \"90%\",\n        backgroundColor: \"white\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"50%\",\n          height: \"50%\",\n          padding: \"3vw\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Addresses with Amounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"grid\",\n            gridTemplateColumns: \"auto 1fr\",\n            gap: \"10px\",\n            height: \"80%\",\n            backgroundColor: \"#FFCCFF\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"15px\"\n            },\n            children: splitdata.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: item.line\n            }, item.line, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            cols: 5,\n            style: {\n              width: \"100%\",\n              height: \"98.5%\",\n              border: \"0px\",\n              borderLeft: \"1px solid grey\",\n              backgroundColor: \"transparent\"\n            },\n            value: inputValue,\n            onChange: e => {\n              setShowButton(false);\n              setError([]);\n              setSplitData([]);\n              setInputValue(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#7D7C7C\",\n            fontSize: \"13px\"\n          },\n          children: \"Separated by ',' or ' ' or '='\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), showButton && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            alignItems: \"center\",\n            color: \"red\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: \"transparent\",\n              color: \"red\",\n              border: \"none\",\n              marginRight: \"5px\"\n            },\n            onClick: keepFirstOne,\n            children: \"Keep first one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), \"|\", /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: \"transparent\",\n              color: \"red\",\n              border: \"none\",\n              marginLeft: \"5px\"\n            },\n            onClick: handleCombineBalances,\n            children: \"Combine Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), error.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\",\n            fontSize: \"15px\",\n            margin: \"5px 0\"\n          },\n          children: [error.some(errorMessage => errorMessage.startsWith(\"Address\")) ? \"Duplicated\" : \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: \"1px solid red\",\n              borderRadius: \"4px\",\n              padding: \"2px\",\n              fontSize: \"15px\"\n            },\n            children: error.map((errorMessage, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: errorMessage\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: \"100%\",\n            marginTop: \"3vh\",\n            padding: \"1vw\",\n            backgroundColor: \"Blue\",\n            color: \"white\",\n            marginLeft: \"3px\"\n          },\n          onClick: onSubmit,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(Disperse, \"i4P/HqCYfkXw/tnsBk+RC8m6PNU=\");\n_c = Disperse;\nexport default Disperse;\nvar _c;\n$RefreshReg$(_c, \"Disperse\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Disperse","_s","inputValue","setInputValue","error","setError","splitdata","setSplitData","showbutton","setShowButton","tempSplitData","split","filter","str","trim","map","index","address","amount","Number","line","onSubmit","errors","duplicateMap","Map","previous","length","isNaN","push","current","has","set","get","includes","forEach","join","handleCombineBalances","combinedData","counter","splice","keepFirstOne","filteredData","style","width","height","backgroundColor","display","justifyContent","alignItems","children","padding","fileName","_jsxFileName","lineNumber","columnNumber","gridTemplateColumns","gap","fontSize","item","cols","border","borderLeft","value","onChange","e","target","color","showButton","marginRight","onClick","marginLeft","margin","some","errorMessage","startsWith","borderRadius","marginTop","_c","$RefreshReg$"],"sources":["/home/mrblackghost/Documents/Projects/Task/task/src/Disperse.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Disperse = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [error, setError] = useState([]);\n  const [splitdata, setSplitData] = useState([]);\n  const [showbutton, setShowButton] = useState(false);\n\n  useEffect(() => {\n    const tempSplitData = inputValue\n      .split(/\\n|,|\\s+/)\n      .filter((str) => str.trim() !== \"\")\n      .map((str, index) => {\n        const [address, amount] = str.split('=');\n        return { address, amount: Number(amount), line: index + 1 };\n      });\n\n    setSplitData(tempSplitData);\n  }, [inputValue]);\n\n  const onSubmit = () => {\n    const errors = [];\n    const duplicateMap = new Map();\n\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      if (isNaN(splitdata[previous].amount) || splitdata[previous].amount === \"\") {\n        errors.push(`Line ${splitdata[previous].line} has an invalid amount`);\n      }\n\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          if (!duplicateMap.has(splitdata[previous].address)) {\n            duplicateMap.set(splitdata[previous].address, [previous + 1]);\n          }\n          if (!duplicateMap.get(splitdata[previous].address).includes(current + 1)) {\n            duplicateMap.get(splitdata[previous].address).push(current + 1);\n          }\n        }\n      }\n    }\n\n    duplicateMap.forEach((index, address) => {\n      errors.push(\n        `Address ${address} has duplicate entries at lines ${index.join(\", \")}`\n      );\n    });\n\n    setError(errors);\n    setShowButton(true);\n  };\n\n  const handleCombineBalances = () => {\n    const combinedData = [];\n    let counter = 1;\n\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          splitdata[previous].amount += splitdata[current].amount;\n          // Remove the duplicate entry\n          splitdata.splice(current, 1);\n          current--; // Adjust the loop index since we removed an element\n        }\n      }\n      // Push non-duplicate items to combinedData\n      combinedData.push({\n        address: splitdata[previous].address,\n        amount: splitdata[previous].amount,\n        line: counter++, // Include the line index\n      });\n    }\n\n    setSplitData(combinedData);\n    setShowButton(false);\n  };\n\n  const keepFirstOne = () => {\n    const filteredData = [];\n    let counter = 1;\n\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          // Remove the duplicate entry\n          splitdata.splice(current, 1);\n          current--; // Adjust the loop index since we removed an element\n        }\n      }\n      // Push non-duplicate items to combinedData\n      filteredData.push({\n        address: splitdata[previous].address,\n        amount: splitdata[previous].amount,\n        line: counter++, // Include the line index\n      });\n    }\n\n    setSplitData(filteredData);\n    setShowButton(false);\n  };\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100vh\",\n        backgroundColor: \"whitesmoke\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <div\n        style={{\n          width: \"90%\",\n          height: \"90%\",\n          backgroundColor: \"white\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div style={{ width: \"50%\", height: \"50%\", padding: \"3vw\" }}>\n          <h4>Addresses with Amounts</h4>\n\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"auto 1fr\",\n              gap: \"10px\",\n              height: \"80%\",\n              backgroundColor: \"#FFCCFF\",\n            }}\n          >\n            <span style={{ fontSize: \"15px\" }}>\n              {splitdata.map((item) => (\n                <div key={item.line}>{item.line}</div>\n              ))}\n            </span>\n            <textarea\n              cols={5}\n              style={{\n                width: \"100%\",\n                height: \"98.5%\",\n                border: \"0px\",\n                borderLeft: \"1px solid grey\",\n                backgroundColor: \"transparent\",\n              }}\n              value={inputValue}\n              onChange={(e) => {\n                setShowButton(false);\n                setError([]);\n                setSplitData([]);\n                setInputValue(e.target.value);\n              }}\n            ></textarea>\n          </div>\n\n          <span style={{ color: \"#7D7C7C\", fontSize: \"13px\" }}>\n            Separated by ',' or ' ' or '='\n          </span>\n          {showButton && (\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                alignItems: \"center\",\n                color: \"red\",\n              }}\n            >\n              <button\n                style={{\n                  backgroundColor: \"transparent\",\n                  color: \"red\",\n                  border: \"none\",\n                  marginRight: \"5px\",\n                }}\n                onClick={keepFirstOne}\n              >\n                Keep first one\n              </button>\n              |\n              <button\n                style={{\n                  backgroundColor: \"transparent\",\n                  color: \"red\",\n                  border: \"none\",\n                  marginLeft: \"5px\",\n                }}\n                onClick={handleCombineBalances}\n              >\n                Combine Balance\n              </button>\n            </div>\n          )}\n\n          {error.length > 0 && (\n            <div style={{ color: \"red\", fontSize: \"15px\", margin: \"5px 0\" }}>\n              {error.some((errorMessage) =>\n                errorMessage.startsWith(\"Address\")\n              )\n                ? \"Duplicated\"\n                : \" \"}\n              <div\n                style={{\n                  border: \"1px solid red\",\n                  borderRadius: \"4px\",\n                  padding: \"2px\",\n                  fontSize: \"15px\",\n                }}\n              >\n                {error.map((errorMessage, index) => (\n                  <p\n                    key={index}\n                    style={{\n                      color: \"red\",\n                    }}\n                  >\n                    {errorMessage}\n                  </p>\n                ))}\n              </div>\n            </div>\n          )}\n\n          <button\n            style={{\n              width: \"100%\",\n              marginTop: \"3vh\",\n              padding: \"1vw\",\n              backgroundColor: \"Blue\",\n              color: \"white\",\n              marginLeft: \"3px\",\n            }}\n            onClick={onSubmit}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Disperse;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}