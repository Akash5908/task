{"ast":null,"code":"var _jsxFileName = \"/home/mrblackghost/Documents/Projects/Task/task/src/Disperse.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Disperse = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [addresses, setAddresses] = useState([]);\n  const [amounts, setAmounts] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const [validLines, setValidLines] = useState([]);\n  const [lineHistory, setLineHistory] = useState([]); // To store all lines\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    // Reset errors and valid lines\n    setErrors([]);\n    setValidLines([]);\n\n    // Split the input into address and amount pairs\n    const pairs = input.split(', ');\n    const newAddresses = [];\n    const newAmounts = [];\n    const newErrors = [];\n    const newValidLines = [];\n    pairs.forEach((pair, index) => {\n      const [address, amount] = pair.split('=');\n      if (address && !isNaN(amount)) {\n        newAddresses.push(address);\n        newAmounts.push(amount);\n        newValidLines.push(pair);\n      } else {\n        newErrors.push(`Invalid pair on line ${index + 1}: ${pair}`);\n      }\n    });\n\n    // Check if the current addresses are the same as the previous addresses\n    if (JSON.stringify(newAddresses) === JSON.stringify(addresses)) {\n      setErrors(['Addresses are the same as the previous value.']);\n    } else {\n      setErrors(newErrors);\n      setAddresses(newAddresses);\n      setAmounts(newAmounts);\n      setValidLines(newValidLines);\n\n      // Append the current input to the line history\n      setLineHistory(prevHistory => [...prevHistory, input]);\n\n      // Clear the input after submission\n      setInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"input\",\n        children: \"Enter Addresses and Amounts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"input\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"address1=amount1, address2=amount2, ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: errors.map((error, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), lineHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Line History:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: lineHistory.map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: line\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), validLines.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Valid Lines:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: validLines.map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: line\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), addresses.length > 0 && amounts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Addresses:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: addresses.map((address, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: address\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Amounts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: amounts.map((amount, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: amount\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Disperse, \"0w1Z008LDkXVy8wB9s0Q3Yj8Hvo=\");\n_c = Disperse;\nexport default Disperse;\nvar _c;\n$RefreshReg$(_c, \"Disperse\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Disperse","_s","input","setInput","addresses","setAddresses","amounts","setAmounts","errors","setErrors","validLines","setValidLines","lineHistory","setLineHistory","onSubmit","e","preventDefault","pairs","split","newAddresses","newAmounts","newErrors","newValidLines","forEach","pair","index","address","amount","isNaN","push","JSON","stringify","prevHistory","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","target","placeholder","type","length","className","map","error","line","_c","$RefreshReg$"],"sources":["/home/mrblackghost/Documents/Projects/Task/task/src/Disperse.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Disperse = () => {\n  const [input, setInput] = useState('');\n  const [addresses, setAddresses] = useState([]);\n  const [amounts, setAmounts] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const [validLines, setValidLines] = useState([]);\n  const [lineHistory, setLineHistory] = useState([]); // To store all lines\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    // Reset errors and valid lines\n    setErrors([]);\n    setValidLines([]);\n\n    // Split the input into address and amount pairs\n    const pairs = input.split(', ');\n    const newAddresses = [];\n    const newAmounts = [];\n    const newErrors = [];\n    const newValidLines = [];\n\n    pairs.forEach((pair, index) => {\n      const [address, amount] = pair.split('=');\n\n      if (address && !isNaN(amount)) {\n        newAddresses.push(address);\n        newAmounts.push(amount);\n        newValidLines.push(pair);\n      } else {\n        newErrors.push(`Invalid pair on line ${index + 1}: ${pair}`);\n      }\n    });\n\n    // Check if the current addresses are the same as the previous addresses\n    if (JSON.stringify(newAddresses) === JSON.stringify(addresses)) {\n      setErrors(['Addresses are the same as the previous value.']);\n    } else {\n      setErrors(newErrors);\n\n      setAddresses(newAddresses);\n      setAmounts(newAmounts);\n      setValidLines(newValidLines);\n\n      // Append the current input to the line history\n      setLineHistory((prevHistory) => [...prevHistory, input]);\n\n      // Clear the input after submission\n      setInput('');\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <label htmlFor=\"input\">Enter Addresses and Amounts:</label>\n        <textarea\n          id=\"input\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"address1=amount1, address2=amount2, ...\"\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n\n      {errors.length > 0 && (\n        <div className=\"error\">\n          {errors.map((error, index) => (\n            <p key={index}>{error}</p>\n          ))}\n        </div>\n      )}\n\n      {lineHistory.length > 0 && (\n        <div>\n          <h2>Line History:</h2>\n          <ul>\n            {lineHistory.map((line, index) => (\n              <li key={index}>{line}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      {validLines.length > 0 && (\n        <div>\n          <h2>Valid Lines:</h2>\n          <ul>\n            {validLines.map((line, index) => (\n              <li key={index}>{line}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      {addresses.length > 0 && amounts.length > 0 && (\n        <div>\n          <h2>Addresses:</h2>\n          <ul>\n            {addresses.map((address, index) => (\n              <li key={index}>{address}</li>\n            ))}\n          </ul>\n\n          <h2>Amounts:</h2>\n          <ul>\n            {amounts.map((amount, index) => (\n              <li key={index}>{amount}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Disperse;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}