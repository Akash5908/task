{"ast":null,"code":"var _jsxFileName = \"/home/mrblackghost/Documents/Projects/Task/task/src/Disperse.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Disperse = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [addresses, setAddresses] = useState([]);\n  const [amounts, setAmounts] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const onSubmit = e => {\n    e.preventDefault();\n\n    // Reset errors\n    setErrors([]);\n\n    // Split the input into address and amount pairs\n    const pairs = input.split(', ');\n    const newAddresses = [];\n    const newAmounts = [];\n    const newErrors = [];\n    const uniqueAddresses = new Set(); // To track unique addresses\n\n    pairs.forEach((pair, index) => {\n      const [address, amount] = pair.split('=');\n      if (address && !isNaN(amount)) {\n        if (uniqueAddresses.has(address)) {\n          // If address is already in the Set, it's a duplicate\n          newErrors.push(`Duplicate address on line ${index + 1}: ${address}`);\n        } else {\n          uniqueAddresses.add(address);\n          newAddresses.push(address);\n          newAmounts.push(amount);\n        }\n      } else {\n        newErrors.push(`Invalid pair on line ${index + 1}: ${pair}`);\n      }\n    });\n    if (newErrors.length > 0) {\n      setErrors(newErrors);\n    } else {\n      setAddresses(newAddresses);\n      setAmounts(newAmounts);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"input\",\n        children: \"Enter Addresses and Amounts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"input\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"address1=amount1, address2=amount2, ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: errors.map((error, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), addresses.length > 0 && amounts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Addresses:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: addresses.map((address, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: address\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Amounts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: amounts.map((amount, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: amount\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Disperse, \"9h7EAOSHWnDhClrJEI9Opgyv3NU=\");\n_c = Disperse;\nexport default Disperse;\nvar _c;\n$RefreshReg$(_c, \"Disperse\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Disperse","_s","input","setInput","addresses","setAddresses","amounts","setAmounts","errors","setErrors","onSubmit","e","preventDefault","pairs","split","newAddresses","newAmounts","newErrors","uniqueAddresses","Set","forEach","pair","index","address","amount","isNaN","has","push","add","length","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","target","placeholder","type","className","map","error","_c","$RefreshReg$"],"sources":["/home/mrblackghost/Documents/Projects/Task/task/src/Disperse.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Disperse = () => {\n  const [input, setInput] = useState('');\n  const [addresses, setAddresses] = useState([]);\n  const [amounts, setAmounts] = useState([]);\n  const [errors, setErrors] = useState([]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  \n    // Reset errors\n    setErrors([]);\n  \n    // Split the input into address and amount pairs\n    const pairs = input.split(', ');\n    const newAddresses = [];\n    const newAmounts = [];\n    const newErrors = [];\n    const uniqueAddresses = new Set(); // To track unique addresses\n  \n    pairs.forEach((pair, index) => {\n      const [address, amount] = pair.split('=');\n  \n      if (address && !isNaN(amount)) {\n        if (uniqueAddresses.has(address)) {\n          // If address is already in the Set, it's a duplicate\n          newErrors.push(`Duplicate address on line ${index + 1}: ${address}`);\n        } else {\n          uniqueAddresses.add(address);\n          newAddresses.push(address);\n          newAmounts.push(amount);\n        }\n      } else {\n        newErrors.push(`Invalid pair on line ${index + 1}: ${pair}`);\n      }\n    });\n  \n    if (newErrors.length > 0) {\n      setErrors(newErrors);\n    } else {\n      setAddresses(newAddresses);\n      setAmounts(newAmounts);\n    }\n  };\n  \n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <label htmlFor=\"input\">Enter Addresses and Amounts:</label>\n        <textarea\n          id=\"input\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"address1=amount1, address2=amount2, ...\"\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n\n      {errors.length > 0 && (\n        <div className=\"error\">\n          {errors.map((error, index) => (\n            <p key={index}>{error}</p>\n          ))}\n        </div>\n      )}\n\n      {addresses.length > 0 && amounts.length > 0 && (\n        <div>\n          <h2>Addresses:</h2>\n          <ul>\n            {addresses.map((address, index) => (\n              <li key={index}>{address}</li>\n            ))}\n          </ul>\n\n          <h2>Amounts:</h2>\n          <ul>\n            {amounts.map((amount, index) => (\n              <li key={index}>{amount}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Disperse;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}