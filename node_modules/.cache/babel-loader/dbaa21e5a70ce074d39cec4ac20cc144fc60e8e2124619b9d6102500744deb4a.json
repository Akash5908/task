{"ast":null,"code":"var _jsxFileName = \"/home/mrblackghost/Documents/Projects/Task/task/src/Disperse.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import axios from 'axios'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst address = [\"0x2CB99F193549681e06C6770dDD5543812B4FaFE8 10dd\", \"0xEb0D38c92deB969b689acA94D962A07515CC5204 5\", \"0xF4aDE8368DDd835B70b625CF7E3E1Bc5791D18C1 8ss\", \"0x09ae5A64465c18718a46b3aD946270BD3E5e6aaB 9\", \"0x8B3392483BA26D65E331dB86D4F430E9B3814E5e 15\"];\nconst Disperse = () => {\n  _s();\n  const [inputValue, setInputValue] = useState(address);\n  const [error, setError] = useState(null); // Define the error state\n  const [splitdata, setSplitData] = useState([]);\n  useEffect(() => {\n    const tempSplitData = inputValue.map(str => {\n      const [address, amount] = str.split(' ');\n      return {\n        address,\n        amount: amount\n      };\n    });\n    setSplitData(tempSplitData);\n  }, [inputValue]);\n  console.log(splitdata);\n\n  // const splitLine = (line) => {\n  //   const parts = line.split('=');\n  //   if (parts.length !== 2) {\n  //     return null; // Invalid format\n  //   }\n\n  //   const address = parts[0].trim();\n  //   const amount = parseFloat(parts[1]);\n\n  //   if (isNaN(amount)) {\n  //     return null; // Amount is not a valid number\n  //   }\n\n  //   console.log(`${address} + ${amount}`); // Corrected string interpolation\n  //   return { address, amount };\n  // };\n\n  const next = () => {\n    const errors = [];\n    splitdata.forEach((item, index) => {\n      if (isNaN(item.amount)) {\n        errors.push(`Line ${index + 1} wrong amount`);\n      }\n    });\n    if (errors.length > 0) {\n      // Set the error state to display errors in the component\n      setError(errors.join('\\n'));\n    } else {\n      // Clear the error state if there are no errors\n      setError(null);\n      // Proceed with the valid data\n      // Your logic here for handling valid data\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100vh',\n      backgroundColor: 'whitesmoke',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '90%',\n        height: '90%',\n        backgroundColor: 'white',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '50%',\n          height: '50%',\n          padding: '3vw'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Addresses with Amounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          cols: 5,\n          style: {\n            width: '100%',\n            height: '80%',\n            display: 'block'\n          },\n          value: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: '100%',\n            marginTop: '5vh',\n            padding: '1vw',\n            backgroundColor: 'Blue',\n            color: 'white'\n          },\n          onClick: next,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n};\n_s(Disperse, \"nDLco8nx2ekoLQ5+G8VBs+Rt8Uk=\");\n_c = Disperse;\nexport default Disperse;\nvar _c;\n$RefreshReg$(_c, \"Disperse\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","address","Disperse","_s","inputValue","setInputValue","error","setError","splitdata","setSplitData","tempSplitData","map","str","amount","split","console","log","next","errors","forEach","item","index","isNaN","push","length","join","style","width","height","backgroundColor","display","justifyContent","alignItems","children","padding","fileName","_jsxFileName","lineNumber","columnNumber","cols","value","color","marginTop","onClick","_c","$RefreshReg$"],"sources":["/home/mrblackghost/Documents/Projects/Task/task/src/Disperse.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// import axios from 'axios'\n\nconst address = [\n  \"0x2CB99F193549681e06C6770dDD5543812B4FaFE8 10dd\",\n  \"0xEb0D38c92deB969b689acA94D962A07515CC5204 5\",\n  \"0xF4aDE8368DDd835B70b625CF7E3E1Bc5791D18C1 8ss\",\n  \"0x09ae5A64465c18718a46b3aD946270BD3E5e6aaB 9\",\n  \"0x8B3392483BA26D65E331dB86D4F430E9B3814E5e 15\"\n]\n\nconst Disperse = () => {\n  const [inputValue, setInputValue] = useState(address);\n  const [error, setError] = useState(null); // Define the error state\nconst [splitdata, setSplitData] = useState([])\n  \n useEffect(() => {\n  const tempSplitData = inputValue.map((str) => {\n    const [address, amount] = str.split(' ');\n    return { address, amount: amount };\n  });\n\n  setSplitData(tempSplitData);\n}, [inputValue]);\n\n\n    console.log(splitdata)\n  \n \n  // const splitLine = (line) => {\n  //   const parts = line.split('=');\n  //   if (parts.length !== 2) {\n  //     return null; // Invalid format\n  //   }\n  \n  //   const address = parts[0].trim();\n  //   const amount = parseFloat(parts[1]);\n  \n  //   if (isNaN(amount)) {\n  //     return null; // Amount is not a valid number\n  //   }\n    \n  //   console.log(`${address} + ${amount}`); // Corrected string interpolation\n  //   return { address, amount };\n  // };\n  \n  \n \n  const next = () => {\n    const errors = [];\n\n    splitdata.forEach((item, index) => {\n      if (isNaN(item.amount)) {\n        errors.push(`Line ${index + 1} wrong amount`);\n      }\n    });\n\n    if (errors.length > 0) {\n      // Set the error state to display errors in the component\n      setError(errors.join('\\n'));\n    } else {\n      // Clear the error state if there are no errors\n      setError(null);\n      // Proceed with the valid data\n      // Your logic here for handling valid data\n    }\n  };\n\n   \n  \n    \n    return (\n      <div\n        style={{\n          width: '100%',\n          height: '100vh',\n          backgroundColor: 'whitesmoke',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <div\n          style={{\n            width: '90%',\n            height: '90%',\n            backgroundColor: 'white',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <div style={{ width: '50%', height: '50%', padding: '3vw' }}>\n            <h4>Addresses with Amounts</h4>\n\n            <textarea\n              cols={5}\n              style={{ width: '100%', height: '80%', display: 'block' }}\n              value={inputValue}\n            \n            ></textarea>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n\n            <button\n              style={{\n                width: '100%',\n                marginTop: '5vh',\n                padding: '1vw',\n                backgroundColor: 'Blue',\n                color: 'white',\n              }}\n              onClick={next}\n            >\n              Next\n            </button>\n\n          </div>\n        </div>\n      </div>\n    );\n  };\n\nexport default Disperse\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}