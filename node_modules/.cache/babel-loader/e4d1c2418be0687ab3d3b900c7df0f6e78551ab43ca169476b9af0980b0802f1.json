{"ast":null,"code":"var _jsxFileName = \"/home/mrblackghost/Documents/Projects/Task/task/src/Disperse.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst address = [\"0x2CB99F193549681e06C6770dDD5543812B4FaFE8 10\", \"0xEb0D38c92deB969b689acA94D962A07515CC5204 5\", \"0x8B3392483BA26D65E331dB86D4F430E9B3814E5e 15\", \"0xF4aDE8368DDd835B70b625CF7E3E1Bc5791D18C1 8d\", \"0x8B3392483BA26D65E331dB86D4F430E9B3814E5e 15\", \"0x09ae5A64465c18718a46b3aD946270BD3E5e6aaB 9\"];\nconst Disperse = () => {\n  _s();\n  const [inputValue, setInputValue] = useState(address);\n  const [error, setError] = useState(null);\n  const [splitdata, setSplitData] = useState([]);\n  const [showbutton, setShowbutton] = useState(false);\n  useEffect(() => {\n    const tempSplitData = inputValue.map(str => {\n      const [address, amount] = str.split(' ');\n      return {\n        address,\n        amount: amount\n      };\n    });\n    setSplitData(tempSplitData);\n  }, [inputValue]);\n  const next = () => {\n    const errors = [];\n    const seenAddresses = new Set();\n    const tempFilteredSplitData = splitdata.filter((item, index) => {\n      if (isNaN(item.amount)) {\n        errors.push(`Line ${index + 1} wrong amount`);\n        return true;\n      }\n      if (seenAddresses.has(item.address)) {\n        errors.push(`Line ${index + 1} has a duplicate address`);\n        setShowbutton(true);\n      } else {\n        seenAddresses.add(item.address);\n        return true; // Keep the line with a unique address\n      }\n    });\n\n    if (errors.length > 0) {\n      setError(errors);\n    } else {\n      setError([]);\n      setShowbutton(false);\n    }\n  };\n  const combineDuplicateAmounts = () => {\n    const combinedData = [];\n    for (let i = 0; i < splitdata.length; i++) {\n      for (let j = i + 1; j < splitdata.length; j++) {\n        if (splitdata[i].address === splitdata[j].address) {\n          const duplicateAmount = parseInt(splitdata[j].amount, 10); // Parse to integer\n          splitdata[i].amount = parseInt(splitdata[i].amount, 10); // Parse to integer\n          splitdata[i].amount += duplicateAmount;\n          console.log(splitdata[i].amount);\n\n          // Remove the duplicate entry\n          splitdata.splice(j, 1);\n          j--; // Adjust the loop index since we removed an element\n        }\n      }\n\n      // Push non-duplicate items to combinedData\n      combinedData.push({\n        address: splitdata[i].address,\n        amount: splitdata[i].amount\n      });\n    }\n    setSplitData(combinedData);\n  };\n  const Keepfirstone = () => {\n    const filteredData = [];\n    for (let i = 0; i < splitdata.length; i++) {\n      for (let j = i + 1; j < splitdata.length; j++) {\n        if (splitdata[i].address === splitdata[j].address) {\n          // Remove the duplicate entry\n          splitdata.splice(j, 1);\n          j--; // Adjust the loop index since we removed an element\n        }\n      }\n\n      // Push non-duplicate items to combinedData\n      filteredData.push({\n        address: splitdata[i].address,\n        amount: splitdata[i].amount\n      });\n    }\n    setSplitData(filteredData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100vh',\n      backgroundColor: 'whitesmoke',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '90%',\n        height: '90%',\n        backgroundColor: 'white',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '50%',\n          height: '50%',\n          padding: '3vw'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Addresses with Amounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          cols: 5,\n          style: {\n            width: '100%',\n            height: '80%',\n            display: 'block'\n          },\n          value: splitdata.length > 0 ? splitdata.map(item => `${item.address} ${item.amount}`).join('\\n') : inputValue.join('\\n'),\n          onChange: e => setInputValue(e.target.value.split('\\n'))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), showbutton && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            alignItems: 'center',\n            color: \"red\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: 'transparent',\n              color: 'red',\n              border: 'none',\n              marginRight: '5px'\n            },\n            onClick: () => {\n              Keepfirstone();\n              next();\n            },\n            children: \"Keep first one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this), \"|\", /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: 'transparent',\n              color: 'red',\n              border: 'none',\n              marginLeft: '5px'\n            },\n            onClick: () => {\n              combineDuplicateAmounts();\n              next();\n            },\n            children: \"Combine Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 3\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: error.map((errorMessage, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'red',\n              border: '1px solid red',\n              borderRadius: \"4px\",\n              padding: '5px'\n            },\n            children: errorMessage\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 7\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: '100%',\n            marginTop: '5vh',\n            padding: '1vw',\n            backgroundColor: 'Blue',\n            color: 'white'\n          },\n          onClick: next,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 7\n  }, this);\n};\n_s(Disperse, \"/ixPUaA4/tqscbbfarqod8r+Ge8=\");\n_c = Disperse;\nexport default Disperse;\nvar _c;\n$RefreshReg$(_c, \"Disperse\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","address","Disperse","_s","inputValue","setInputValue","error","setError","splitdata","setSplitData","showbutton","setShowbutton","tempSplitData","map","str","amount","split","next","errors","seenAddresses","Set","tempFilteredSplitData","filter","item","index","isNaN","push","has","add","length","combineDuplicateAmounts","combinedData","i","j","duplicateAmount","parseInt","console","log","splice","Keepfirstone","filteredData","style","width","height","backgroundColor","display","justifyContent","alignItems","children","padding","fileName","_jsxFileName","lineNumber","columnNumber","cols","value","join","onChange","e","target","color","border","marginRight","onClick","marginLeft","errorMessage","borderRadius","marginTop","_c","$RefreshReg$"],"sources":["/home/mrblackghost/Documents/Projects/Task/task/src/Disperse.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst address = [\n  \"0x2CB99F193549681e06C6770dDD5543812B4FaFE8 10\",\n  \"0xEb0D38c92deB969b689acA94D962A07515CC5204 5\",\n  \"0x8B3392483BA26D65E331dB86D4F430E9B3814E5e 15\",\n  \"0xF4aDE8368DDd835B70b625CF7E3E1Bc5791D18C1 8d\",\n  \"0x8B3392483BA26D65E331dB86D4F430E9B3814E5e 15\",\n  \"0x09ae5A64465c18718a46b3aD946270BD3E5e6aaB 9\",\n]\n\nconst Disperse = () => {\n  const [inputValue, setInputValue] = useState(address);\n  const [error, setError] = useState(null);\n  const [splitdata, setSplitData] = useState([]);\n  const [showbutton, setShowbutton] = useState(false);\n\n  useEffect(() => {\n    const tempSplitData = inputValue.map((str) => {\n      const [address, amount] = str.split(' ');\n      return { address, amount: amount };\n    });\n\n    setSplitData(tempSplitData);\n  }, [inputValue]);\n\n  const next = () => {\n    const errors = [];\n    const seenAddresses = new Set();\n  \n    const tempFilteredSplitData = splitdata.filter((item, index) => {\n      if (isNaN(item.amount)) {\n        errors.push(`Line ${index + 1} wrong amount`);\n        return true;\n      }\n      if (seenAddresses.has(item.address)) {\n        \n        errors.push(`Line ${index + 1} has a duplicate address`);\n        setShowbutton(true)\n       \n      } else {\n        seenAddresses.add(item.address);\n        return true; // Keep the line with a unique address\n      }\n    });\n    if (errors.length > 0) {\n      setError(errors);\n    } else {\n      setError([]);\n      setShowbutton(false);\n    }\n\n  }\n\n  const combineDuplicateAmounts = () => {\n \n    const combinedData = [];\n  \n    for (let i = 0; i < splitdata.length; i++) {\n      for (let j = i + 1; j < splitdata.length; j++) {\n        if (splitdata[i].address === splitdata[j].address) {\n          const duplicateAmount = parseInt(splitdata[j].amount, 10); // Parse to integer\n          splitdata[i].amount = parseInt(splitdata[i].amount, 10); // Parse to integer\n          splitdata[i].amount += duplicateAmount;\n          console.log(splitdata[i].amount);\n  \n          // Remove the duplicate entry\n          splitdata.splice(j, 1);\n          j--; // Adjust the loop index since we removed an element\n        }\n      }\n      \n      // Push non-duplicate items to combinedData\n      combinedData.push({ address: splitdata[i].address, amount: splitdata[i].amount });\n    }\n  \n setSplitData(combinedData)\n  };\n  \n  const Keepfirstone = () => {\n \n    const filteredData = [];\n  \n    for (let i = 0; i < splitdata.length; i++) {\n      for (let j = i + 1; j < splitdata.length; j++) {\n        if (splitdata[i].address === splitdata[j].address) {\n          // Remove the duplicate entry\n          splitdata.splice(j, 1);\n          j--; // Adjust the loop index since we removed an element\n        }\n      }\n      \n      // Push non-duplicate items to combinedData\n      filteredData.push({ address: splitdata[i].address, amount: splitdata[i].amount });\n    }\n  \n setSplitData(filteredData)\n  };\n  \n  \n\n\n    return (\n      <div\n        style={{\n          width: '100%',\n          height: '100vh',\n          backgroundColor: 'whitesmoke',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <div\n          style={{\n            width: '90%',\n            height: '90%',\n            backgroundColor: 'white',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <div style={{ width: '50%', height: '50%', padding: '3vw' }}>\n            <h4>Addresses with Amounts</h4>\n\n            <textarea\n  cols={5}\n  style={{ width: '100%', height: '80%', display: 'block' }}\n  value={ splitdata.length > 0\n    ? splitdata.map((item) => `${item.address} ${item.amount}`).join('\\n')\n    : inputValue.join('\\n')}\n  onChange={(e) => setInputValue(e.target.value.split('\\n'))}\n></textarea>\n\n       {showbutton && (\n  <div style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' ,color:\"red\"}}>\n                <button style={{ backgroundColor: 'transparent', color: 'red', border: 'none', marginRight: '5px' }}  onClick={() => {\n    Keepfirstone();\n    next();\n  }}\n                  >\n      Keep first one\n    </button>\n    |\n                <button style={{ backgroundColor: 'transparent', color: 'red', border: 'none', marginLeft: '5px' }} onClick={() => {\n                  combineDuplicateAmounts();\n                  next();\n                }}>\n      Combine Balance\n    </button>\n  </div>\n)}\n\n\n           {error && (\n  <div>\n    {error.map((errorMessage, index) => (\n      <p key={index} style={{ color: 'red', border: '1px solid red', borderRadius: \"4px\", padding: '5px' }}>\n        {errorMessage}\n      </p>\n    ))}\n  </div>\n)}\n\n            <button\n              style={{\n                width: '100%',\n                marginTop: '5vh',\n                padding: '1vw',\n                backgroundColor: 'Blue',\n                color: 'white',\n              }}\n              onClick={next}\n            >\n              Next\n            </button>\n\n          </div>\n        </div>\n      </div>\n    );\n  };\n\nexport default Disperse\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAG,CACd,+CAA+C,EAC/C,8CAA8C,EAC9C,+CAA+C,EAC/C,+CAA+C,EAC/C,+CAA+C,EAC/C,8CAA8C,CAC/C;AAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAACI,OAAO,CAAC;EACrD,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMc,aAAa,GAAGR,UAAU,CAACS,GAAG,CAAEC,GAAG,IAAK;MAC5C,MAAM,CAACb,OAAO,EAAEc,MAAM,CAAC,GAAGD,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC;MACxC,OAAO;QAAEf,OAAO;QAAEc,MAAM,EAAEA;MAAO,CAAC;IACpC,CAAC,CAAC;IAEFN,YAAY,CAACG,aAAa,CAAC;EAC7B,CAAC,EAAE,CAACR,UAAU,CAAC,CAAC;EAEhB,MAAMa,IAAI,GAAGA,CAAA,KAAM;IACjB,MAAMC,MAAM,GAAG,EAAE;IACjB,MAAMC,aAAa,GAAG,IAAIC,GAAG,CAAC,CAAC;IAE/B,MAAMC,qBAAqB,GAAGb,SAAS,CAACc,MAAM,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC9D,IAAIC,KAAK,CAACF,IAAI,CAACR,MAAM,CAAC,EAAE;QACtBG,MAAM,CAACQ,IAAI,CAAE,QAAOF,KAAK,GAAG,CAAE,eAAc,CAAC;QAC7C,OAAO,IAAI;MACb;MACA,IAAIL,aAAa,CAACQ,GAAG,CAACJ,IAAI,CAACtB,OAAO,CAAC,EAAE;QAEnCiB,MAAM,CAACQ,IAAI,CAAE,QAAOF,KAAK,GAAG,CAAE,0BAAyB,CAAC;QACxDb,aAAa,CAAC,IAAI,CAAC;MAErB,CAAC,MAAM;QACLQ,aAAa,CAACS,GAAG,CAACL,IAAI,CAACtB,OAAO,CAAC;QAC/B,OAAO,IAAI,CAAC,CAAC;MACf;IACF,CAAC,CAAC;;IACF,IAAIiB,MAAM,CAACW,MAAM,GAAG,CAAC,EAAE;MACrBtB,QAAQ,CAACW,MAAM,CAAC;IAClB,CAAC,MAAM;MACLX,QAAQ,CAAC,EAAE,CAAC;MACZI,aAAa,CAAC,KAAK,CAAC;IACtB;EAEF,CAAC;EAED,MAAMmB,uBAAuB,GAAGA,CAAA,KAAM;IAEpC,MAAMC,YAAY,GAAG,EAAE;IAEvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxB,SAAS,CAACqB,MAAM,EAAEG,CAAC,EAAE,EAAE;MACzC,KAAK,IAAIC,CAAC,GAAGD,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGzB,SAAS,CAACqB,MAAM,EAAEI,CAAC,EAAE,EAAE;QAC7C,IAAIzB,SAAS,CAACwB,CAAC,CAAC,CAAC/B,OAAO,KAAKO,SAAS,CAACyB,CAAC,CAAC,CAAChC,OAAO,EAAE;UACjD,MAAMiC,eAAe,GAAGC,QAAQ,CAAC3B,SAAS,CAACyB,CAAC,CAAC,CAAClB,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC;UAC3DP,SAAS,CAACwB,CAAC,CAAC,CAACjB,MAAM,GAAGoB,QAAQ,CAAC3B,SAAS,CAACwB,CAAC,CAAC,CAACjB,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC;UACzDP,SAAS,CAACwB,CAAC,CAAC,CAACjB,MAAM,IAAImB,eAAe;UACtCE,OAAO,CAACC,GAAG,CAAC7B,SAAS,CAACwB,CAAC,CAAC,CAACjB,MAAM,CAAC;;UAEhC;UACAP,SAAS,CAAC8B,MAAM,CAACL,CAAC,EAAE,CAAC,CAAC;UACtBA,CAAC,EAAE,CAAC,CAAC;QACP;MACF;;MAEA;MACAF,YAAY,CAACL,IAAI,CAAC;QAAEzB,OAAO,EAAEO,SAAS,CAACwB,CAAC,CAAC,CAAC/B,OAAO;QAAEc,MAAM,EAAEP,SAAS,CAACwB,CAAC,CAAC,CAACjB;MAAO,CAAC,CAAC;IACnF;IAEHN,YAAY,CAACsB,YAAY,CAAC;EACzB,CAAC;EAED,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IAEzB,MAAMC,YAAY,GAAG,EAAE;IAEvB,KAAK,IAAIR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxB,SAAS,CAACqB,MAAM,EAAEG,CAAC,EAAE,EAAE;MACzC,KAAK,IAAIC,CAAC,GAAGD,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGzB,SAAS,CAACqB,MAAM,EAAEI,CAAC,EAAE,EAAE;QAC7C,IAAIzB,SAAS,CAACwB,CAAC,CAAC,CAAC/B,OAAO,KAAKO,SAAS,CAACyB,CAAC,CAAC,CAAChC,OAAO,EAAE;UACjD;UACAO,SAAS,CAAC8B,MAAM,CAACL,CAAC,EAAE,CAAC,CAAC;UACtBA,CAAC,EAAE,CAAC,CAAC;QACP;MACF;;MAEA;MACAO,YAAY,CAACd,IAAI,CAAC;QAAEzB,OAAO,EAAEO,SAAS,CAACwB,CAAC,CAAC,CAAC/B,OAAO;QAAEc,MAAM,EAAEP,SAAS,CAACwB,CAAC,CAAC,CAACjB;MAAO,CAAC,CAAC;IACnF;IAEHN,YAAY,CAAC+B,YAAY,CAAC;EACzB,CAAC;EAKC,oBACExC,OAAA;IACEyC,KAAK,EAAE;MACLC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,OAAO;MACfC,eAAe,EAAE,YAAY;MAC7BC,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE;IACd,CAAE;IAAAC,QAAA,eAEFhD,OAAA;MACEyC,KAAK,EAAE;QACLC,KAAK,EAAE,KAAK;QACZC,MAAM,EAAE,KAAK;QACbC,eAAe,EAAE,OAAO;QACxBC,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE;MACd,CAAE;MAAAC,QAAA,eAEFhD,OAAA;QAAKyC,KAAK,EAAE;UAAEC,KAAK,EAAE,KAAK;UAAEC,MAAM,EAAE,KAAK;UAAEM,OAAO,EAAE;QAAM,CAAE;QAAAD,QAAA,gBAC1DhD,OAAA;UAAAgD,QAAA,EAAI;QAAsB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAE/BrD,OAAA;UACVsD,IAAI,EAAE,CAAE;UACRb,KAAK,EAAE;YAAEC,KAAK,EAAE,MAAM;YAAEC,MAAM,EAAE,KAAK;YAAEE,OAAO,EAAE;UAAQ,CAAE;UAC1DU,KAAK,EAAG/C,SAAS,CAACqB,MAAM,GAAG,CAAC,GACxBrB,SAAS,CAACK,GAAG,CAAEU,IAAI,IAAM,GAAEA,IAAI,CAACtB,OAAQ,IAAGsB,IAAI,CAACR,MAAO,EAAC,CAAC,CAACyC,IAAI,CAAC,IAAI,CAAC,GACpEpD,UAAU,CAACoD,IAAI,CAAC,IAAI,CAAE;UAC1BC,QAAQ,EAAGC,CAAC,IAAKrD,aAAa,CAACqD,CAAC,CAACC,MAAM,CAACJ,KAAK,CAACvC,KAAK,CAAC,IAAI,CAAC;QAAE;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC,EAEJ3C,UAAU,iBAChBV,OAAA;UAAKyC,KAAK,EAAE;YAAEI,OAAO,EAAE,MAAM;YAAEC,cAAc,EAAE,UAAU;YAAEC,UAAU,EAAE,QAAQ;YAAEa,KAAK,EAAC;UAAK,CAAE;UAAAZ,QAAA,gBAChFhD,OAAA;YAAQyC,KAAK,EAAE;cAAEG,eAAe,EAAE,aAAa;cAAEgB,KAAK,EAAE,KAAK;cAAEC,MAAM,EAAE,MAAM;cAAEC,WAAW,EAAE;YAAM,CAAE;YAAEC,OAAO,EAAEA,CAAA,KAAM;cACjIxB,YAAY,CAAC,CAAC;cACdtB,IAAI,CAAC,CAAC;YACR,CAAE;YAAA+B,QAAA,EACe;UAEf;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAEG,eAAArD,OAAA;YAAQyC,KAAK,EAAE;cAAEG,eAAe,EAAE,aAAa;cAAEgB,KAAK,EAAE,KAAK;cAAEC,MAAM,EAAE,MAAM;cAAEG,UAAU,EAAE;YAAM,CAAE;YAACD,OAAO,EAAEA,CAAA,KAAM;cACjHjC,uBAAuB,CAAC,CAAC;cACzBb,IAAI,CAAC,CAAC;YACR,CAAE;YAAA+B,QAAA,EAAC;UAEf;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN,EAGW/C,KAAK,iBACfN,OAAA;UAAAgD,QAAA,EACG1C,KAAK,CAACO,GAAG,CAAC,CAACoD,YAAY,EAAEzC,KAAK,kBAC7BxB,OAAA;YAAeyC,KAAK,EAAE;cAAEmB,KAAK,EAAE,KAAK;cAAEC,MAAM,EAAE,eAAe;cAAEK,YAAY,EAAE,KAAK;cAAEjB,OAAO,EAAE;YAAM,CAAE;YAAAD,QAAA,EAClGiB;UAAY,GADPzC,KAAK;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACN,eAEWrD,OAAA;UACEyC,KAAK,EAAE;YACLC,KAAK,EAAE,MAAM;YACbyB,SAAS,EAAE,KAAK;YAChBlB,OAAO,EAAE,KAAK;YACdL,eAAe,EAAE,MAAM;YACvBgB,KAAK,EAAE;UACT,CAAE;UACFG,OAAO,EAAE9C,IAAK;UAAA+B,QAAA,EACf;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClD,EAAA,CA3KED,QAAQ;AAAAkE,EAAA,GAARlE,QAAQ;AA6Kd,eAAeA,QAAQ;AAAA,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}