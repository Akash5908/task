{"ast":null,"code":"var _jsxFileName = \"/home/mrblackghost/Documents/Projects/Task/task/src/Disperse.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst address = [\"0x2CB99F193549681e06C6770dDD5543812B4FaFE8=1\", \"0x8B3392483BA26D65E331dB86D4F430E9B3814E5e 50\", \"0xEb0D38c92deB969b689acA94D962A07515CC5204=2\", \"0xF4aDE8368DDd835B70b625CF7E3E1Bc5791D18C1=10d\", \"0x09ae5A64465c18718a46b3aD946270BD3E5e6aaB,13\", \"0x2CB99F193549681e06C6770dDD5543812B4FaFE8=1\", \"0x8B3392483BA26D65E331dB86D4F430E9B3814E5e 50\", \"0x09ae5A64465c18718a46b3aD946270BD3E5e6aaB,13\", \"0x2CB99F193549681e06C6770dDD5543812B4FaFE8=1\"];\nconst Disperse = () => {\n  _s();\n  const [inputValue, setInputValue] = useState(address);\n  const [error, setError] = useState(null);\n  const [splitdata, setSplitData] = useState([]);\n  const [showbutton, setShowbutton] = useState(false);\n  useEffect(() => {\n    const tempSplitData = inputValue.map(str => {\n      const [address, amount] = str.split(/[ ,=]/);\n      return {\n        address,\n        amount: amount\n      };\n    });\n    setSplitData(tempSplitData);\n  }, [inputValue]);\n  const onSumbit = () => {\n    const errors = [];\n    const duplicateMap = new Map();\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      if (isNaN(splitdata[previous].amount)) {\n        errors.push(`Line ${previous + 1} wrong amount`);\n      }\n      for (let current = splitdata.length; current >= 0; current--) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          if (!duplicateMap.has(splitdata[previous].address)) {\n            duplicateMap.set(splitdata[previous].address, [previous + 1]);\n            console.log(previous, \"prev\");\n          }\n          duplicateMap.get(splitdata[previous].address).push(current + 1);\n          console.log(current, \"dui\");\n        }\n      }\n    }\n    duplicateMap.forEach((index, address) => {\n      errors.push(`Address ${address} has duplicate entries at lines ${index.join(', ')}`);\n      setShowbutton(true);\n    });\n    if (errors.length > 0) {\n      setError(errors);\n    } else {\n      setError([]);\n      setShowbutton(false);\n    }\n  };\n  const handleCombineBalances = () => {\n    const combinedData = [];\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          const duplicateAmount = parseInt(splitdata[current].amount, 10); // Parse to integer\n          splitdata[previous].amount = parseInt(splitdata[previous].amount, 10); // Parse to integer\n          splitdata[previous].amount += duplicateAmount;\n          // Remove the duplicate entry\n          splitdata.splice(current, 1);\n          current--; // Adjust the loop index since we removed an element\n        }\n      }\n\n      // Push non-duplicate items to combinedData\n      combinedData.push({\n        address: splitdata[previous].address,\n        amount: splitdata[previous].amount\n      });\n    }\n    setShowbutton(false);\n    setSplitData(combinedData);\n  };\n  const KeepFirstOne = () => {\n    const filteredData = [];\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          // Remove the duplicate entry\n          splitdata.splice(current, 1);\n          current--; // Adjust the loop index since we removed an element\n        }\n      }\n      // Push non-duplicate items to combinedData\n      filteredData.push({\n        address: splitdata[previous].address,\n        amount: splitdata[previous].amount\n      });\n    }\n    setShowbutton(false);\n    setSplitData(filteredData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100vh\",\n      backgroundColor: \"whitesmoke\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"90%\",\n        height: \"90%\",\n        backgroundColor: \"white\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"50%\",\n          height: \"50%\",\n          padding: \"3vw\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Addresses with Amounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          cols: 5,\n          style: {\n            width: \"100%\",\n            height: \"80%\",\n            display: \"block\"\n          },\n          value: splitdata.length > 0 ? splitdata.map(item => `${item.address} ${item.amount}`).join(\"\\n\") : inputValue.join(\"\\n\"),\n          onChange: e => setInputValue(e.target.value.split(\"\\n\"))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#7D7C7C\",\n            fontSize: \"13px\"\n          },\n          children: \"Separated by ','or' 'or'='\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), showbutton && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            alignItems: \"center\",\n            color: \"red\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: \"transparent\",\n              color: \"red\",\n              border: \"none\",\n              marginRight: \"5px\"\n            },\n            onClick: () => {\n              KeepFirstOne();\n              onSumbit();\n            },\n            children: \"Keep first one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), \"|\", /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: \"transparent\",\n              color: \"red\",\n              border: \"none\",\n              marginLeft: \"5px\"\n            },\n            onClick: () => {\n              handleCombineBalances();\n              onSumbit();\n            },\n            children: \"Combine Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\",\n            fontSize: \"15px\",\n            margin: \"5px 0\"\n          },\n          children: [\" Duplicated\", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: \"1px solid red\",\n              borderRadius: \"4px\",\n              padding: \"2px\",\n              fontSize: \"15px\"\n            },\n            children: error.map((errorMessage, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: errorMessage\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: \"100%\",\n            marginTop: \"3vh\",\n            padding: \"1vw\",\n            backgroundColor: \"Blue\",\n            color: \"white\",\n            marginLeft: \"3px\"\n          },\n          onClick: onSumbit,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(Disperse, \"/ixPUaA4/tqscbbfarqod8r+Ge8=\");\n_c = Disperse;\nexport default Disperse;\nvar _c;\n$RefreshReg$(_c, \"Disperse\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","address","Disperse","_s","inputValue","setInputValue","error","setError","splitdata","setSplitData","showbutton","setShowbutton","tempSplitData","map","str","amount","split","onSumbit","errors","duplicateMap","Map","previous","length","isNaN","push","current","has","set","console","log","get","forEach","index","join","handleCombineBalances","combinedData","duplicateAmount","parseInt","splice","KeepFirstOne","filteredData","style","width","height","backgroundColor","display","justifyContent","alignItems","children","padding","fileName","_jsxFileName","lineNumber","columnNumber","cols","value","item","onChange","e","target","color","fontSize","border","marginRight","onClick","marginLeft","margin","borderRadius","errorMessage","marginTop","_c","$RefreshReg$"],"sources":["/home/mrblackghost/Documents/Projects/Task/task/src/Disperse.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst address = [\n  \"0x2CB99F193549681e06C6770dDD5543812B4FaFE8=1\",\n\"0x8B3392483BA26D65E331dB86D4F430E9B3814E5e 50\",\n\"0xEb0D38c92deB969b689acA94D962A07515CC5204=2\",\n\"0xF4aDE8368DDd835B70b625CF7E3E1Bc5791D18C1=10d\",\n\"0x09ae5A64465c18718a46b3aD946270BD3E5e6aaB,13\",\n\"0x2CB99F193549681e06C6770dDD5543812B4FaFE8=1\",\n\"0x8B3392483BA26D65E331dB86D4F430E9B3814E5e 50\",\n\"0x09ae5A64465c18718a46b3aD946270BD3E5e6aaB,13\",\n\"0x2CB99F193549681e06C6770dDD5543812B4FaFE8=1\",\n];\n\nconst Disperse = () => {\n  const [inputValue, setInputValue] = useState(address);\n  const [error, setError] = useState(null);\n  const [splitdata, setSplitData] = useState([]);\n  const [showbutton, setShowbutton] = useState(false);\n\n  useEffect(() => {\n    const tempSplitData = inputValue.map((str) => {\n      const [address, amount] = str.split(/[ ,=]/);\n      return { address, amount: amount };\n    });\n\n    setSplitData(tempSplitData);\n  }, [inputValue]);\n\n  const onSumbit = () => {\n    const errors = [];\n    const duplicateMap = new Map();\n  \n    for (let previous = 0; previous < splitdata.length; previous++) {\n      if (isNaN(splitdata[previous].amount)) {\n        errors.push(`Line ${previous + 1} wrong amount`);\n      }\n  \n      for (let current = splitdata.length ; current >= 0 ; current--) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          if (!duplicateMap.has(splitdata[previous].address)) {\n            duplicateMap.set(splitdata[previous].address, [previous + 1]);\n            console.log(previous,\"prev\")\n          } \n            duplicateMap.get(splitdata[previous].address).push(current + 1);\n            console.log(current, \"dui\")\n          \n        }\n      }\n      \n      \n      \n    }\n    duplicateMap.forEach((index, address) => {\n      errors.push(`Address ${address} has duplicate entries at lines ${index.join(', ')}`);\n    setShowbutton(true)\n\n    });  \n    if (errors.length > 0) {\n      setError(errors);\n    } else {\n      setError([]);\n      setShowbutton(false);\n    }\n  };\n\n  const handleCombineBalances = () => {\n    const combinedData = [];\n\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          const duplicateAmount = parseInt(splitdata[current].amount, 10); // Parse to integer\n          splitdata[previous].amount = parseInt(splitdata[previous].amount, 10); // Parse to integer\n          splitdata[previous].amount += duplicateAmount;\n          // Remove the duplicate entry\n          splitdata.splice(current, 1);\n          current--; // Adjust the loop index since we removed an element\n        }\n      }\n\n      // Push non-duplicate items to combinedData\n      combinedData.push({\n        address: splitdata[previous].address,\n        amount: splitdata[previous].amount,\n      });\n    }\n    setShowbutton(false)\n    setSplitData(combinedData);\n  };\n  const KeepFirstOne = () => {\n    const filteredData = [];\n    for (let previous = 0; previous < splitdata.length; previous++) {\n      for (let current = previous + 1; current < splitdata.length; current++) {\n        if (splitdata[previous].address === splitdata[current].address) {\n          // Remove the duplicate entry\n          splitdata.splice(current, 1);\n          current--; // Adjust the loop index since we removed an element\n        }\n      }\n      // Push non-duplicate items to combinedData\n      filteredData.push({\n        address: splitdata[previous].address,\n        amount: splitdata[previous].amount,\n      });\n    }\n    setShowbutton(false)\n    setSplitData(filteredData);\n  };\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100vh\",\n        backgroundColor: \"whitesmoke\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <div\n        style={{\n          width: \"90%\",\n          height: \"90%\",\n          backgroundColor: \"white\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div style={{ width: \"50%\", height: \"50%\", padding: \"3vw\" }}>\n          <h4>Addresses with Amounts</h4>\n\n          <textarea\n            cols={5}\n            style={{ width: \"100%\", height: \"80%\", display: \"block\" }}\n            value={\n              splitdata.length > 0\n                ? splitdata\n                    .map((item) => `${item.address} ${item.amount}`)\n                    .join(\"\\n\")\n                : inputValue.join(\"\\n\")\n            }\n            onChange={(e) => setInputValue(e.target.value.split(\"\\n\"))}\n          ></textarea>\n          <span style={{ color: \"#7D7C7C\", fontSize: \"13px\" }}>\n            Separated by ','or' 'or'='\n          </span>\n          {showbutton && (\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                alignItems: \"center\",\n                color: \"red\",\n              }}\n            >\n              <button\n                style={{\n                  backgroundColor: \"transparent\",\n                  color: \"red\",\n                  border: \"none\",\n                  marginRight: \"5px\",\n                }}\n                onClick={() => {\n                  KeepFirstOne();\n                  onSumbit();\n                }}\n              >\n                Keep first one\n              </button>\n              |\n              <button\n                style={{\n                  backgroundColor: \"transparent\",\n                  color: \"red\",\n                  border: \"none\",\n                  marginLeft: \"5px\",\n                }}\n                onClick={() => {\n                  handleCombineBalances();\n                  onSumbit();\n                }}\n              >\n                Combine Balance\n              </button>\n            </div>\n          )}\n          \n          {error && (\n   <div style={{color:\"red\",fontSize:\"15px\", margin: \"5px 0\"}}> Duplicated\n            <div style={{\n              border: \"1px solid red\",\n            borderRadius: \"4px\",\n                padding: \"2px\",\n              fontSize:\"15px\"\n            }}>\n              \n              {error.map((errorMessage, index) => (\n                <p\n                key={index}\n                style={{\n                  color: \"red\",\n                  \n                }}\n                >\n                  {errorMessage}\n                </p>\n              ))}\n              </div>\n              </div>\n          )}\n          \n\n          <button\n            style={{\n              width: \"100%\",\n              marginTop: \"3vh\",\n              padding: \"1vw\",\n              backgroundColor: \"Blue\",\n              color: \"white\",\n              marginLeft: \"3px\",\n            }}\n            onClick={onSumbit}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Disperse;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}